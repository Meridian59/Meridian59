% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
BlueDragon is Monster

constants:

   include blakston.khd
   

   ANIM_BITE = 1
   
   SPELL_CHANCE = 3

resources:

   BlueDragon_name_rsc = "blue dragon"
   BlueDragon_icon_rsc = bdragon.bgf
   BlueDragon_desc_rsc = \
      "This cold blooded and fire breathing dragon can easily rip a players head clear from their shoulders. "
	  "These creatures were the result of the fall of the dinosaurs and the result of many deaths. "
	  "You can see by the size and power of this monster that you shouldn't go near it without a group of companions."


   BlueDragon_dead_icon_rsc = bdragonX.bgf
   BlueDragon_dead_name_rsc = "slain blue dragon"

   BlueDragon_sound_hit = drg_atkm.wav
   BlueDragon_sound_miss = drg_atkm.wav
   BlueDragon_sound_death = drg_dth.wav
   BlueDragon_sound_aware = drg_awr.wav

   BlueDragon_cast_sound = drg_awr.wav

   BlueDragon_spit = fireball.bgf
   
   BlueDragon_no_truce      = "A truce appears to be impossible with this ressurected beast!"

classvars:
   vrName = BlueDragon_name_rsc
   vrIcon = BlueDragon_icon_rsc
   vrDesc = BlueDragon_desc_rsc
   vrDead_icon = BlueDragon_dead_icon_rsc
   vrDead_name = BlueDragon_dead_name_rsc

   viTreasure_type = TID_BLUE_DRAGON
   viSpeed = SPEED_VERY_SLOW
   viAttack_types = ATCK_WEAP_BITE
   viLevel = 200
   viDifficulty = 15
   viKarma = 0
   viDefault_behavior = AI_FIGHT_AGGRESSIVE |  AI_FIGHT_WIZARD_KILLER | AI_FIGHT_HYPERAGGRESSIVE
   viAttributes = MOB_RANDOM
   viGender = GENDER_MALE   

   vrSound_hit = BlueDragon_sound_hit
   vrSound_miss = BlueDragon_sound_miss
   vrSound_aware = BlueDragon_sound_aware
   vrSound_death = BlueDragon_sound_death

properties:

   piAnimation = ANIM_NONE

messages:

   Constructed()
   {
      pimax_Hit_Points = pimax_hit_Points * 5;
      piHit_Points = pimax_hit_points;

      plResistances = [
                        [  80, -ATCK_SPELL_ACID ],
                        [  80, ATCK_WEAP_NONMAGIC ],
                        [  60, -ATCK_SPELL_SHOCK ]
                      ];
      propagate;
   }

   MonsterCastSpell()
   {
      local oSpell, oHold, iBase;

      oSpell = send(SYS,@FindSpellByNum,#num=SID_FIREBALL);

      iBase = send(self,@AdjustedChanceBase,#base=SPELL_CHANCE);

      if Random(1,iBase) = 1
         AND send(poOwner,@ReqSomethingAttack,#what=self,#victim=poTarget)
         AND send(oSpell,@CanPayMonsterCosts,#who=self,#ltargets=[poTarget],#iSpellPower=75)
         AND send(poowner,@ReqSpellCast,#who=self,#ospell=oSpell,#litems=[poTarget])
         AND send(poOwner,@LineOfSight,#obj1=self,#obj2=poTarget)
      {
         send(self,@DoBite);
         send(oSpell,@CastSpell,#who=self,#lTargets=[poTarget]);

         return TRUE;
      }

      return FALSE;
   }
   
   ReqSpellCast(who = $, oSpell = $, lItems = $)
   {
      if oSpell = send(SYS,@FindSpellByNum,#num=SID_TRUCE)
      {  
         Send(who,@MsgSendUser,#message_rsc=bluedragon_no_truce);            

         return FALSE; 
      }

      propagate;
   }
   
   ReqMonsterMove(new_row = $,new_col = $)
   "Called by monster moving code to check if we really want to go"
   "to <new_row>,<new_col>."
   {
      if poOwner <> $
         AND Send(poOwner,@GetRoomNum) = RID_TROLL_CAVE
         AND (new_col > 24)
      {
		 return FALSE;
      }
	  
      if poOwner <> $
         AND Send(poOwner,@GetRoomNum) = RID_TROLL_CAVE
         AND (new_col < 18)
      {
		 Send(self,@MonsterCastSpell);
		 return FALSE;
      }

      propagate;
   }
   
   AssessDamage(what = $,damage = $,atype = 0, aspell = 0,bonus = 0)
   "Blue Dragon has Gaze."
   {
	  local oHold, iBase;
	  
      iBase = send(self,@AdjustedChanceBase,#base=SPELL_CHANCE);

      if Random(1,iBase) = 1
	  {
		 oHold = send(SYS,@FindSpellByNum,#num=SID_HOLD);
		 send(oHold,@DoHold,#who=self,#otarget=what);
	  }

      propagate;
   }
   
   CanSee(what=$)
   {
      local iRow, iCol;

      if poOwner <> $
         AND Send(poOwner,@GetRoomNum) = RID_TROLL_CAVE
         AND what <> $
      {
         iRow = Send(what,@GetRow);
         iCol = Send(what,@GetCol);

         if iCol > 25 AND iRow < 11
         {
            return FALSE;
         }
      }

      propagate;
   }

   SomethingMoved(what=$)
   {
      local oTrance, oActive, lActive, i;

      if what <> self OR poOwner = $
      {
         propagate;
      }

      % Shake the ground when I take a step.
      % Small chance each person might lose any active trance.

      Send(poOwner,@Rumble,#duration=250,#disruption=50);
      
      propagate;
   }
   
   DoSpasm()
   {
      Send(self,@DoBite);

      propagate;
   }

   MonsterAttack(what = $)
   {
      Send(self,@DoBite);

      return;
   }
   
   DoCast()
   {
      Send(self,@DoBite);

      return;
   }

   DoBite()
   {
      piAnimation = ANIM_BITE;
      Send(poOwner,@SomethingChanged,#what=self);
      piAnimation = ANIM_NONE;

      return;
   }

   SendMoveAnimation()
   {
      AddPacket(1, ANIMATE_CYCLE, 4, 200, 2, 2, 2, 5);

      return;
   }

   SendLookAnimation()
   {
      AddPacket(1, ANIMATE_CYCLE, 4, 200, 2, 2, 2, 5);

      return;
   }

   SendAnimation()
   {
      if piAnimation = ANIM_BITE
      {
         AddPacket(1, ANIMATE_ONCE, 4, 100, 2, 6, 2, 8, 2, 1);

         return;
      }

      propagate;
   }

   CanMorphTo()
   {
      return FALSE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
