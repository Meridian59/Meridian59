% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
GiantEyeball is Monster

constants:

   include blakston.khd

resources:

   GiantEyeball_koc_name_rsc = "riijamoch"
   GiantEyeball_name_rsc = "giant eyeball"
   GiantEyeball_icon_rsc = eyeball.bgf
   GiantEyeball_desc_rsc = \
   "Floating several feet above the ground, giant eyeballs are creatures of disputed origin. "
   "It is spoken of as a gate that leads to inner realms and spaces of higher consciousness. "
   "You get the funny feeling that you are being watched. "

   GiantEyeball_dead_icon_rsc = blank.bgf
   GiantEyeball_dead_name_rsc = ""
   
   GiantEyeball_sound_hit = orc_atkh.wav
   GiantEyeball_sound_miss = orc_atkm.wav
   GiantEyeball_sound_death = orc_dth.wav
   GiantEyeball_sound_aware = orc_awr.wav

classvars:

   vrKocName = GiantEyeball_koc_name_rsc
   vrName = GiantEyeball_name_rsc
   vrIcon = GiantEyeball_icon_rsc
   vrDesc = GiantEyeball_desc_rsc
   vrDead_icon = GiantEyeball_dead_icon_rsc
   vrDead_name = GiantEyeball_dead_name_rsc
   
   viTreasure_type = TID_NONE
   viAttack_types = ATCK_WEAP_WHIP
   viSpeed = SPEED_NONE
   viAttributes = MOB_NOMOVE 
   viDefault_behavior = AI_NOMOVE | AI_FIGHT_KARMA_AGGRESSIVE
   viLevel = 50
   viDifficulty = 10
   viKarma = 0
   
   vrSound_hit = GiantEyeball_sound_hit
   vrSound_miss = GiantEyeball_sound_miss
   vrSound_aware = GiantEyeball_sound_aware
   vrSound_death = GiantEyeball_sound_death

properties:

   piDrawfx = BOUNCE_YES
   pbIllusion = TRUE
   vbSummoned = TRUE
   
   ptTime = $
   poViewer = $

messages:

   Constructor(viewer = $, time = 0)
   {
	  if viewer <> $
	  {
		 poViewer = viewer;
	  }
	  
	  if time > 0
	  {
		 ptTime = createTimer(self,@Delete,time);
	  }
	  
      propagate;
   }
   
   Delete()
   {
	  if ptTime <> $
	  {
		 deleteTimer(ptTime);
		 ptTime = $;
	  }
	  
      propagate;
   }

   ReqSomethingEntered(what=$)
   {
      if poViewer = $
      {
         Send(self,@Delete);
      }
      
      if IsClass(poViewer,&Player)
         AND NOT Send(poViewer,@IsLoggedOn)
      {
         Send(self,@Delete);
      }
      
      propagate;
   }
   
   SomethingLeft(what=$)
   {
      if poViewer = $
      {
         Send(self,@Delete);
      }
      else
      {
         if IsClass(poViewer,&Player)
            and not Send(poViewer,@IsLoggedOn)
         {
            Send(self,@Delete);
         }
      }

      propagate;
   }
   
   SomethingKilled(what = $,victim = $,use_weapon = $)
   "Someone just died, perhaps we need to clear our target."
   {
      if victim = poViewer
      {
         post(self,@Delete);
      }
      
      propagate;
   }
   
   GetViewer()
   {
	  return poViewer;
   }
   
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
