% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Frogman is Monster

constants:

   include blakston.khd

   ANIM_ATTACK_WOUNDED1 = 2
   ANIM_ATTACK_WOUNDED2 = 3

resources:

   frogman_koc_name_rsc = "yozotz"
   frogman_name_rsc = "frogman"
   frogman_icon_rsc = frogman.bgf
   frogman_desc_rsc = "This is a frogman, a gentle race of amphibioids. They are known for their hatred of those who follow the evil path."

   frogman_dead_icon_rsc = frogmanX.bgf
   frogman_dead_name_rsc = "dead frogman"

   frogman_sound_hit = frg_atkh.wav
   frogman_sound_miss = frg_atkm.wav
   frogman_sound_death = frg_dth.wav
   frogman_sound_aware = frg_awr.wav

classvars:
 
   viIndefinite = ARTICLE_A
   vrKocName = frogman_koc_name_rsc
   vrName = frogman_name_rsc
   vrIcon = frogman_icon_rsc
   vrDesc = frogman_desc_rsc
   vrDead_icon = frogman_dead_icon_rsc
   vrDead_name = frogman_dead_name_rsc

   viTreasure_type = TID_MEDIUM_HUMAN

   viSpeed = SPEED_AVERAGE
   viAttack_type = ATCK_WEAP_PIERCE
   viDefault_behavior = AI_FIGHT_KARMA_AGGRESSIVE
   viLevel = 70
   viDifficulty = 5
   viKarma = 80

   vrSound_hit = frogman_sound_hit
   vrSound_miss = frogman_sound_miss
   vrSound_aware = frogman_sound_aware
   vrSound_death = frogman_sound_death

properties:

   piAnimation = ANIM_NONE

messages:

   Constructed()
   {
      plResistances = [ [ 65, ATCK_WEAP_NONMAGIC],
                        [-30, -ATCK_SPELL_UNHOLY ],
                        [-10, -ATCK_SPELL_COLD ] ];
      propagate;
   }

   MonsterAttack(what = $)
   {
      piAnimation = ANIM_ATTACK;
      if piHit_points < (2*viLevel/3)
      {
	 piAnimation = ANIM_ATTACK_WOUNDED1;
      }
      if piHit_points < (viLevel/3)
      {
	 piAnimation = ANIM_ATTACK_WOUNDED2;
      }
      Send(poOwner,@SomethingChanged,#what=self);
      piAnimation = ANIM_NONE;
      
      return;
   }

   SendLookAnimation()
   {
      AddPacket(1,ANIMATE_CYCLE);
      AddPacket(4,300,2,2,2,3);

      return;
   }

   SendMoveAnimation()
   {
      AddPacket(1,ANIMATE_CYCLE,4,100,2,2,2,3);

      return;
   }

   SendAnimation()
   {
      if piAnimation = ANIM_ATTACK
      {
	 AddPacket(1,ANIMATE_ONCE,4,200,2,4,2,5,2,1);
	 return;
      }

      if piAnimation = ANIM_ATTACK_WOUNDED1
      {
	 AddPacket(1,ANIMATE_ONCE,4,250,2,6,2,7,2,1);
	 return;
      }

      if piAnimation = ANIM_ATTACK_WOUNDED2
      {
	 AddPacket(1,ANIMATE_ONCE,4,300,2,8,2,9,2,1);
	 return;
      }

      % if no body animation
      
      propagate;
   }

   CanMorphTo()
   {
      return FALSE;
   }      

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
