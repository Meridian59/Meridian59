% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Zombie is Monster

constants:

   include blakston.khd
   DEMENTIA_CHANCE = 5

resources:

   zombie_koc_name_rsc = "ixleoc"
   zombie_name_rsc = "zombie"
   zombie_icon_rsc = zombie.bgf
   zombie_desc_rsc = \
   "Unfettered evil has brought the dead back to life in the "
   "form of this zombie.  Rotten flesh, white and pulpy, "
   "clings to soft bone.  Its watery eyes stare out, "
   "unseeing."

   zombie_dead_icon_rsc = zombieX.bgf
   zombie_dead_name_rsc = "dead zombie"

   zombie_sound_hit = zmb_atkh.wav
   zombie_sound_miss = zmb_atkm.wav
   zombie_sound_death = zmb_dth.wav
   zombie_sound_aware = zmb_awr.wav

classvars:

   vrKocName = zombie_koc_name_rsc
   vrName = zombie_name_rsc
   vrIcon = zombie_icon_rsc
   vrDesc = zombie_desc_rsc
   vrDead_icon = zombie_dead_icon_rsc
   vrDead_name = zombie_dead_name_rsc

   viSpeed = SPEED_VERY_SLOW
   viAttack_type = ATCK_WEAP_SLASH
   viDefault_behavior = AI_FIGHT_KARMA_AGGRESSIVE | AI_MOVE_FLEE_FRIGHTENERS

   viDifficulty = 4
   viKarma = -45

   vrSound_hit = zombie_sound_hit
   vrSound_miss = zombie_sound_miss
   vrSound_aware = zombie_sound_aware
   vrSound_death = zombie_sound_death

properties:


   % our private data

   viTreasure_type = TID_ZOMBIE
   viLevel = 55

   piAnimation = ANIM_NONE

   vbSummoned = FALSE

   ptRevertControl = $

messages:

   Constructed()
   {
      plResistances = [ [ 50, -ATCK_SPELL_UNHOLY ],
                        [-25, -ATCK_SPELL_HOLY ] ];
      propagate;
   }

   Constructor(DropsTreasure=TRUE,Level=0)
   {
      if Level > 0
      {
	 viLevel = Level;
      }
      if not DropsTreasure
      {
         viTreasure_type = TID_NONE;
         vbSummoned = TRUE;
      }
      propagate;
   }


   MonsterAttack(what = $)
   {
      piAnimation = ANIM_ATTACK;
      Send(poOwner,@SomethingChanged,#what=self);
      piAnimation = ANIM_NONE;
      
      return;
   }

   SendLookAnimation()
   {
      AddPacket(1,ANIMATE_CYCLE);
      AddPacket(4,200,2,2,2,3);

      return;
   }

   SendMoveAnimation()
   {
      % Cycle through "walking" bitmaps (groups 2-5) at 50 milliseconds per frame
      AddPacket(1,ANIMATE_CYCLE,4,200,2,2,2,3);

      return;
   }

   SendAnimation()
   {
      if piAnimation = ANIM_ATTACK
      {
	 AddPacket(1,ANIMATE_ONCE,4,200,2,2,2,3,2,1);
	 return;
      }

      % if no body animation
      
      propagate;
   }

   HitSideEffect( what = $ )
   {
      local oSpell;
      oSpell = Send(SYS,@FindSpellByNum,#num=SID_DEMENTIA);
      if not Send(what,@IsEnchanted,#what=oSpell) 
      and Random(1,DEMENTIA_CHANCE) = 1
      {
	 Send(oSpell,@MakeSick,#who=what);
      }
      return;
   }

   IsUndead()
   {
      return TRUE;
   }

   SetMaster(oMaster=$,DurationSecs=1)
   {
      if (oMaster <> $) and isClass(oMaster,&User)
      {
         ptRevertControl = createTimer(self,@RevertControl,(DurationSecs*1000));
      }
      propagate;
   }
   RevertControl()
   {
      ptRevertControl = $;
      send(self,@SetMaster,#oMaster=$);
      return;
   }
   

   Delete()
   {
      if ptRevertControl <> $
      {
         deleteTimer(ptRevertControl);
         ptRevertControl = $;
      }
      propagate;
   }
   
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
