% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
BarloqueJail is BarloqueRoom

constants:

   include blakston.khd

resources:

   room_barloque_jail = barjail.roo
   room_name_barloque_jail = "Old Jailhouse"

classvars:

   vrName = room_name_barloque_jail

   viTeleport_row = 6
   viTeleport_col = 12

   viPermanent_flags = ROOM_NO_COMBAT
   viTerrain_Type = TERRAIN_CITY

properties:

   prRoom = room_barloque_jail
   piRoom_num = RID_BAR_JAIL

   piBaseLight = LIGHT_NICE
   piOutside_factor = 3

   pbLocked = FALSE

messages:

   CreateStandardObjects()
   {
      %% guards
      send(self,@NewHold,#what=Create(&DukeGuard),
	 #new_row=3,#new_col=14,#fine_row=32,#fine_col=0,
	 #new_angle=ANGLE_SOUTH);
      send(self,@NewHold,#what=Create(&DukeGuard),
	 #new_row=14,#new_col=14,#fine_row=32,#fine_col=0,
	 #new_angle=ANGLE_NORTH);
      send(self,@NewHold,#what=Create(&DukeGuard),
	 #new_row=2,#new_col=2,#fine_row=32,#fine_col=32,
	 #new_angle=ANGLE_SOUTH_EAST);

      %% table
      send(self,@NewHold,#what=Create(&Table),#new_row=4,#new_col=11);

      propagate;
   }

   CreateStandardExits()
   {
      plExits = $;

      %% TO TOWN
      plExits = Cons([ 2, 7, RID_BAR_NORTH, 31, 62, ROTATE_NONE ],plExits); %% north
      plExits = Cons([ 6, 2, ROOM_LOCKED_DOOR ],plExits); %% to courtroom

      % these doors moved below to allow locking.
      %% THROUGH SECURITY
      %plExits = Cons([ 4, 4, RID_BAR_JAIL, 3, 2, ROTATE_NONE ],plExits); %% to courtroom
      %plExits = Cons([ 3, 3, RID_BAR_JAIL, 4, 5, ROTATE_NONE ],plExits); %% to courtroom

      propagate;
   }

   SomethingTryGo(what = $,row = $,col = $)
   {
      if (row = 3) and (col = 3)
      {
         if pbLocked
         {
            send(what,@msgsenduser,#message_rsc=room_door_is_locked);
            Send(what,@WaveSendUser,#wave_rsc=room_sound_locked);
            return TRUE;
         }
         else
         {
            Send(what,@MsgSendUser,#message_rsc=room_door_was_opened);
            Send(what,@WaveSendUser,#wave_rsc=Send(self,@GetDoorSound));
            Send(SYS,@UtilGoNearSquare,#what=what,#where=self,#new_row=4,#new_col=5);
            return TRUE;
         }
      }
      if (row = 4) and (col = 4)
      {
         if pbLocked
         {
            send(what,@msgsenduser,#message_rsc=room_door_is_locked);
            Send(what,@WaveSendUser,#wave_rsc=room_sound_locked);
            return TRUE;
         }
         else
         {
            Send(what,@MsgSendUser,#message_rsc=room_door_was_opened);
            Send(what,@WaveSendUser,#wave_rsc=Send(self,@GetDoorSound));
            Send(SYS,@UtilGoNearSquare,#what=what,#where=self,#new_row=3,#new_col=2);
            return TRUE;
         }
      }
      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
