% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
DungeonVictoria is Room

constants:

   include blakston.khd

   HOURS_PER_TOY = 100

resources:

   room_dungeon = greeny.roo
   room_name_dungeon = "Underbasement of Victoria"
   dungeon_music = cave.mp3

   climb_crates_rsc = "You climb up on the crate."
   search_crates_rsc = "You rummage around in an open crate."
   found_in_crate_rsc = "You find something of interest!"

classvars:

   vrName = room_name_dungeon

   viTeleport_row = 13
   viTeleport_col = 2

   viTerrain_Type = TERRAIN_SEWERS | TERRAIN_CASTLE

properties:

   piRoom_num = RID_DUNGEON
   prRoom = room_dungeon
   prMusic = dungeon_music

   piBaseLight = 80
   piOutside_factor = 0

   piHoursCounter = HOURS_PER_TOY
   poLastFinder = $

   plFind = $

messages:

   CreateStandardObjects()
   {
      if plFind = $
      {
         plFind = [ &TrueLute,
                    &Tanktop,
                    &ShrunkenHead,
                    &Book,
                    &Rose,
                    &GuildShield,
                    &AphrodesiacPotion,
                    &LabeledWand,
                    &SpiderBaby,
                    &NarthylWorm,
                    &Junk ];
      }

      send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=26,#new_col=5,#fine_row=48,#fine_col=62);   
      send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=26,#new_col=23,#fine_row=48,#fine_col=34);   
      send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=5,#new_col=21,#fine_row=1,#fine_col=48);   
      send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=2,#new_col=18,#fine_row=31,#fine_col=48);   
      send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=1,#new_col=6,#fine_row=47,#fine_col=34);   
      send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=4,#new_col=4,#fine_row=47,#fine_col=29);   
      send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=7,#new_col=2,#fine_row=48,#fine_col=32);   
      send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=26,#new_col=2,#fine_row=47,#fine_col=32);

      propagate;
   }

   CreateStandardExits()
   {
      plExits = $;

      plExits = Cons([ 25, 2, RID_CASTLE1, 5, 32, ROTATE_NONE ],plExits);

      return;
   }

   RecalcLightAndWeather()
   {
      piHoursCounter = piHoursCounter - 1;

      propagate;
   }

   SomethingTryGo(what = $,row = $,col = $)
   {
      local find,iNewRow,iNewCol;

      if (row = 10) and (col = 7)
         AND send(what,@CheckPlayerFlag,#flag=PFLAG_PKILL_ENABLE)
      {
         send(SYS,@UtilGoNearSquare,#what=what,#where=self,#new_row=10,#new_col=6);
         send(what,@MsgSendUser,#message_rsc=climb_crates_rsc);
         
         return TRUE;
      }

      %
      % Rummaging around in the crate.
      % If it's not the last person who found something, and enough time has elapsed,
      % "find" (create) something of interest for them.
      %
      % The plFind is a list of classes.
      % We create one instance of a randomly chosen class.
      % If it's an item, we give it to them.
      % Some items have special properties, such as random coloring.
      % If it's a monster, we generate it at their feet.
      %

      % Don't let angeled characters climb up on the crates and search around.
      if (row = 10) and (col = 6)
         AND send(what,@CheckPlayerFlag,#flag=PFLAG_PKILL_ENABLE)
      {
         send(what,@MsgSendUser,#message_rsc=search_crates_rsc);
         
         if what = poLastFinder
         {
            return TRUE;
         }

         if piHoursCounter < 0
         {
            piHoursCounter = HOURS_PER_TOY + random(0,100) - 50;

            if plFind = $ { return TRUE; }

            find = $;
            
            if length(plFind) > 0
            {
               find = Nth(plFind,random(1,length(plFind)));
            }
            else
            {
               find = plFind;
            }

            if find = $
            {
               return TRUE;
            }
            
            find = Create(find);
            
            if find = $
            {
               return TRUE;
            }

            send(what,@MsgSendUser,#message_rsc=found_in_crate_rsc);
            poLastFinder = what;

            if isClass(find,&Item)
            {
               if isClass(find,&Tanktop) { send(find,@Exotic); }
               if isClass(find,&Shirt) { send(find,@Randomize); }
               if isClass(find,&GuildShield) { send(find,@Randomize); }

               send(what,@NewHold,#what=find);
            }

            if isClass(find,&Monster)
            {
               % Offset the monster a bit so that it appears, instead of trying to fit two things in the same space.
               iNewRow = 11;
               iNewCol = 6;
               
               if send(self,@ReqNewHold,#what=find,#new_row=iNewRow,#new_col=iNewCol)
                  AND send(self,@ReqSomethingMoved,#what=find,#new_row=iNewRow,#new_col=iNewCol)
               {
                  send(self,@NewHold,#what=find,#new_row=iNewRow,#new_col=iNewCol);
               }
               else
               {
                  send(find,@Delete);
                  find = $;
               }
            }
         }

         return TRUE;
      }

      propagate;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
