% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
GuildHall13 is GuildHall

constants:

   MAIN_DOOR  = 4
   MAIN_DOOR_OPEN = 500
   MAIN_DOOR_CLOSED = 360
   SECRET_DOOR = 5
   SECRET_DOOR_OPEN = 480
   SECRET_DOOR_CLOSED = 380
   
   DOOR_DELAY = 5000
       
   include blakston.khd

resources:

   room_name_guildh13 = "The Hall of the Slaughtered Command"
   room_guildh13 = guildh13.roo

   guildh13_locked = "The door is firmly locked"

   guildh13_gong = pdeath.wav
   guildh13_ocean_sound = ocean.wav

classvars:

   vrName = room_name_guildh13

   viTeleport_row = 9
   viTeleport_col = 3

   viNews_row = 2
   viNews_col = 12
   viNews_finerow = 24
   viNews_finecol = 0

   % Foyer is L-shaped
   viFoyer_north = 1          %outer bounding box
   viFoyer_south = 13 
   viFoyer_west = 1
   viFoyer_east = 7
   viFoyer2_south = 4         %inner elbow of L (inside is N and/or W of this point)
   viFoyer2_east = 4

   viLever_row = 15
   viLever_col = 17
   viLever_fine_row = 24
   viLever_fine_col = 40

   viInner_teleport_row = 5
   viInner_teleport_col = 28

   viQuality = 8
   viSeconds_til_close = 9

properties:

   prRoom = room_guildh13
   piRoom_num = RID_GUILDH13

   piBaseLight = LIGHT_NICE
   piOutside_factor = OUTDOORS_5

   ptSecret = $
   ptEntrance = $

messages:

   Constructor()
   {
      plGuild_doors = [ [2,7], [3,7], [4,7] ];

      %  each sound is [wave_file, row, col, cutoff radius, maximum volume]
      plLooping_sounds = [ [ guildh13_ocean_sound, 13, 7, 10, 10 ],
                           [ guildh13_ocean_sound, 11, 2, 10, 10 ],
                           [ guildh13_ocean_sound, 5, 38, 30, 100 ]
                         ];
      
      propagate;
   }

   CreateStandardExits()
   {
      plExits = $;

      plExits = Cons([ 9, 4, ROOM_LOCKED_DOOR, guildh13_locked ],plExits);

      plExits = Cons([ 9, 5, RID_GUILDH13, 9, 3, ROTATE_NONE ],plExits);

      %% teleport in to (11, 3) -- main entrance
      plExits = Cons([ 11, 2, RID_KOC_SOUTH, 43, 38, ROTATE_NONE ],plExits);
      plExits = Cons([ 10, 2, RID_KOC_SOUTH, 43, 38, ROTATE_NONE ],plExits);

      %% teleport in to (12, 7) -- to secure porch
      plExits = Cons([ 13, 7, RID_KOC_SOUTH, 47, 43, ROTATE_NONE ],plExits);
      plExits = Cons([ 13, 8, RID_KOC_SOUTH, 47, 43, ROTATE_NONE ],plExits);

      propagate;
   }

   NewHold(what=$)
   {
      if what <> $ AND isClass(what,&User)
      {
         send(self,@SetSector,#sector=SECRET_DOOR,#animation=ANIMATE_CEILING_LIFT,
              #height=SECRET_DOOR_OPEN,#speed=0);
      }

      propagate;
   }

   SomethingTryGo(what=$, row=$, col=$)
   "Opens the guild outer doors from the inside"
   {
      if (row >= 2 AND row <= 4) AND col = 8
      {
         if send(self,@ReqLegalEntry,#who = what)
         {
            send(self,@OpenEntranceDoor);

            return TRUE;
         }
      }

      propagate;
   }

   SomeoneSaid(what = $,type = $,string = $,parm1 = $,parm2 = $,parm3 = $,
            parm4 = $, parm5 = $,parm6 = $,parm7 = $,parm8 = $)                       
   {
      local i, each_obj;

      if type = SAY_YELL or not isclass(what,&player)
      {
         % Stolen from Holder, since we can't just propagate to GuildHall's version.
         for i in plActive
         {
            each_obj = send(self,@HolderExtractObject,#data=i);
            if send(self,@SayRangeCheck,#talker=what,#hearer=each_obj)
            {
               send(each_obj,@SomeoneSaid,#what=what,#type=type,#string=string,
                    #parm1=parm1, #parm2=parm2,#parm3=parm3,#parm4=parm4,
                    #parm5=parm5,#parm6=parm6,#parm7=parm7,#parm8=parm8);
            }
         }

         return;
      }

      % Say to people inside or outside the guild hall only.
      for i in plActive
      {
         each_obj = send(self,@HolderExtractObject,#data=i);
         if send(self,@SayRangeCheck,#talker=what,#hearer=each_obj)
         {
           if send(self,@InFoyer,#who=what) = send(self,@InFoyer,#who=each_obj)
           {
              send(each_obj,@SomeoneSaid,#what=what,#type=type,#string=string,
                #parm1=parm1,#parm2=parm2,#parm3=parm3,#parm4=parm4,
                #parm5=parm5,#parm6=parm6,#parm7=parm7,#parm8=parm8);
           }
           else
           {
              send(each_obj,@MsgSendUser,#message_rsc=guildhall_muffled);
           }
         }
      }

      if poGuild_owner <> $
         AND stringEqual(string,send(poGuild_owner,@GetPassword))
         AND NOT send(self,@InFoyer,#who=what)
         AND type <> SAY_EMOTE
      {
         send(self,@WalkThroughSecretWall,#who=what);
      }

      return;
   }

   WalkThroughSecretWall(who=$)
   {
      local row, col;

      if who = $ OR send(who,@GetOwner) <> self
      {
         return FALSE;
      }

      row = send(who,@GetRow);
      col = send(who,@GetCol);

      if (col = 26) OR (col = 27)
      {
         if (row = 8)
         {
            send(SYS,@UtilGoNearSquare,#what=who,#where=self,#new_row=10,#new_col=col);
         }

         if (row = 9)
         {
            send(SYS,@UtilGoNearSquare,#what=who,#where=self,#new_row=7,#new_col=col);
         }
      }

      return;
   }

   InFoyer(who=$)
   "This returns TRUE if the player is in the foyer area, and FALSE if the "
   "player is in the guild hall proper."
   {
      local iRow, iCol;

      if send(who,@GetOwner) <> self
      {
         return FALSE;
      }

      iRow = send(who,@GetRow);
      iCol = send(who,@GetCol);

      if iRow >= viFoyer_north AND iRow <= viFoyer_south
         AND iCol <= viFoyer_east AND iCol >= viFoyer_west
         AND (iRow <= viFoyer2_south OR iCol <= viFoyer2_east)
      {
         return TRUE;
      }

      return FALSE;
   }

   Delete()
   {
      if ptSecret <> $
      {
         DeleteTimer(ptSecret);
         ptSecret=$;
      }

      if ptEntrance <> $
      {
         DeleteTimer(ptEntrance);
         ptEntrance = $;
      }

      propagate;
   }

   OpenEntranceDoor()
   {
       if ptEntrance = $
       {
          send(self,@TimeStampDoor);
          send(self,@SetSector,#sector=MAIN_DOOR,#animation=ANIMATE_CEILING_LIFT,
               #height=MAIN_DOOR_OPEN,#speed=50);
          ptEntrance=CreateTimer(self,@CloseEntranceDoor,DOOR_DELAY);
          send(self,@OpenEntranceDoorSound);
       }    

       return;
   }

   CloseEntranceDoor()
   {
       ptEntrance = $;
       send(self,@SetSector,#sector=MAIN_DOOR,#animation=ANIMATE_CEILING_LIFT,
           #height=MAIN_DOOR_CLOSED,#speed=50);
       send(self,@CloseEntranceDoorSound);

       return;
   }

   OpenSecretDoor()
   {
      return;
   }

   CloseSecretDoor()
   {
      ptSecret = $;

      return;
   }

   CreateStandardObjects()
   {
      local lObjCoords1;
      lObjCoords1 = [ [02,01,24,56,OO_JUG], [08,10,16,56,OO_JUG],
                      [10,05,32,16,OO_JUG], [02,17,08,24,OO_DECORATIVE_POT],
                      [08,18,48,24,OO_GOLD_BOTTLE], [08,19,48,32,OO_BLUE_BOTTLE],
                      [10,06,48,32,OO_POISON],
                      [06,04,48,40,OO_tallurn], [08,22,32,16,OO_tallurn],
                      [13,14,40,32,OO_bigurn]
                    ];
      Send(self,@CreateOrnObjFromList,#lObjlist=lObjCoords1);

      % labelled as guild hall 13?
      Send(self,@NewHold,#what=Create(&TableLamp),#new_row=05,#new_col=16,#fine_col=24,#fine_row=16);
      Send(self,@NewHold,#what=Create(&TableLamp),#new_row=05,#new_col=18,#fine_col=24,#fine_row=16);
      Send(self,@NewHold,#what=Create(&TableLamp),#new_row=13,#new_col=13,#fine_col=40,#fine_row=32);

      Send(self,@NewHold,#what=Create(&Chest),
           #new_row=12,#new_col=24,#fine_col=00,#fine_row=48,#new_angle=ANGLE_WEST);
      Send(self,@NewHold,#what=Create(&Chest),
           #new_row=13,#new_col=24,#fine_col=48,#fine_row=48,#new_angle=ANGLE_WEST);
      Send(self,@NewHold,#what=Create(&Chest),
           #new_row=12,#new_col=29,#fine_col=40,#fine_row=08,#new_angle=ANGLE_WEST);
      Send(self,@NewHold,#what=Create(&Chest),
           #new_row=13,#new_col=29,#fine_col=56,#fine_row=08,#new_angle=ANGLE_WEST);

      propagate;
   }

   DefensesDown()
   {
      Send(self,@SomethingWaveRoom,#what=poShield_Lever,#wave_rsc=guildh13_gong);

      propagate;
   }

   GetRegion()
   {
      return RID_KOCATAN;
   }

   CreateHotPlates()
   {
      local lHotPlates, i, oPlate;

      lHotPlates = [ [1,8,1], [2,8,1], [3,8,1], [4,8,1],
                     [1,9,2], [2,9,2], [3,9,2], [4,9,2]
                   ];

      for i in lHotPlates
      {
         oPlate = Create(&Hotplate,#hpid=nth(i,3));
         send(self,@NewHold,#what=oPlate,#new_row = nth(i,1),#new_col = nth(i,2));
      }

      return;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
