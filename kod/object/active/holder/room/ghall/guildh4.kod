% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
GuildHall4 is GuildHall

constants:

   DOOR1 = 1
   WESTDOOR = 4
   EASTDOOR = 5
   MASTERDOOR = 6
   ASSISTDOOR = 7
   STORAGEDOOR = 8

   RESET_TIME = 10000
   NEXT_TIME = 1000
   RESET_TIME_LONG = 20000

   % Values for light flickering
   FLICKER_LOW = 80
   FLICKER_HIGH = 220
   FLICKER_NONE = 124

   include blakston.khd

resources:

   room_name_guildh4 = "The Wryn's Keep"
   room_guildh4 = guildh4.roo

   guildhall4_sound = down2.wav

   news_guild4_name = "news"
   news_guild4_desc = "This is the guild newsgroup."

classvars:

   vrName = room_name_guildh4

   viNews_row = 36
   viNews_col = 10
   viNews_finerow = 0
   viNews_finecol = 36

   viTeleport_row = 50
   viTeleport_col = 27

   viFoyer_north = 44
   viFoyer_south = 51
   viFoyer_east = 29
   viFoyer_west = 21

   viLever_row = 1
   viLever_col = 25
   viLever_fine_row = 32
   viLever_fine_col =  0

   viInner_teleport_row = 18
   viInner_teleport_col = 16

   viQuality = 10
   viTerrain_type = TERRAIN_CITY | TERRAIN_GUILDHALL | TERRAIN_CAVES
   viSeconds_til_close = 18

properties:

   prRoom = room_guildh4
   piRoom_num = RID_GUILDH4

   piBaseLight = LIGHT_DARK
   piOutside_Factor = OUTDOORS_NONE

   piPos1 = 0
   piPos2 = 0

   ptReset = $
   ptEntrance = $
   ptStorage = $

   plGuild_doors
   ptLighting = $

messages:

   Constructor()
   "These mark the exterior door of the guild, which is only openable by "
   "a guild member or an allied guild member."
   {
      plGuild_doors = [[44,23], [44,24], [44,25], [44,26]];

      propagate;
   }

   OpenSecretDoor()
   {
      local iSectorID;

      if piPos1 > 6
      {
         return;
      }

      piPos1 = piPos1 + 1;
      iSectorID = piPos1 + 7;

      send(self,@SetSector,#sector=iSectorID,#animation=ANIMATE_FLOOR_LIFT,
           #height=132,#speed=16);
      send(self,@OpenSecretDoorSound);

      if piPos1 < 7
      {
         ptStorage = CreateTimer(self,@ResetStorageTimer,NEXT_TIME);
      }

      if piPos1 = 7
      {
         ptStorage = CreateTimer(self,@ResetStorageTimer,RESET_TIME);
      }

      return;
   }

   CloseStorageDoor()
   {
      if piPos1 < 7
      {
         return;
      }

      piPos1 = piPos1 + 1;
      
      send(self,@SetSector,#sector=piPos1,#animation=ANIMATE_FLOOR_LIFT,
           #height=256,#speed=16);
      send(self,@CloseSecretDoorSound);

      if piPos1 < 14
      {
         ptStorage = CreateTimer(self,@ResetStorageTimer,NEXT_TIME);
      }

      if piPos1 = 14
      {
         piPos1 = 0;
      }

      return;
   }

   ResetStorageTimer()
   {
      ptStorage = $;
      
      if (piPos1 > 6)
      {
         send(self,@CloseStorageDoor); 

         return;
      }

      send(self,@OpenSecretDoor);

      return;
   }

   OpenEntranceDoor()
   {
      if ptEntrance = $
      {                  
         if piPos2 > 2
         {
            return;
         }
      
         send(self,@TimeStampDoor);
         piPos2 = piPos2 + 1;
      
         Send(self,@SomethingWaveRoom,#wave_rsc=guildhall4_sound);
         send(self,@SetSector,#sector=piPos2,#animation=ANIMATE_CEILING_LIFT,
              #height=196,#speed=16);
         send(self,@OpenEntranceDoorSound);

         if piPos2 < 3
         {
            ptEntrance = CreateTimer(self,@ResetEntranceTimer,NEXT_TIME);
         }

         if piPos2 = 3
         {
            ptEntrance = CreateTimer(self,@ResetEntranceTimer,RESET_TIME);
         }
      }  

      return;
   }
   
   CloseEntranceDoor()
   {
      return;
   }

   CloseEntranceDoorTimer()
   {
      local iSectorID;

      if piPos2 < 2
      {
         return;
      }

      piPos2 = piPos2 + 1;
      iSectorID = piPos2 - 3;

      Send(self,@SomethingWaveRoom,#wave_rsc=guildhall4_sound);
      send(self,@SetSector,#sector=iSectorID,#animation=ANIMATE_CEILING_LIFT,
           #height=128,#speed=16);
      send(self,@CloseEntranceDoorSound);
      
      if piPos2 < 6
      {
         ptEntrance = CreateTimer(self,@ResetEntranceTimer,NEXT_TIME);
      }

      if piPos2 = 6
      {
         piPos2 = 0;
      }

      return;
   }

   ResetEntranceTimer()
   {
      ptEntrance = $;

      if (piPos2 > 2)
      {
         send(self,@CloseEntranceDoorTimer); 

         return;
      }      

      send(self,@OpenEntranceDoor);

      return;
   }
   
   ResetTimer()
   {
      ptReset = $;

      send(self,@SetSector,#sector=WESTDOOR,#animation=ANIMATE_CEILING_LIFT,
           #height=128,#speed=16);
      send(self,@SetSector,#sector=EASTDOOR,#animation=ANIMATE_CEILING_LIFT,
           #height=128,#speed=16);
      send(self,@SetSector,#sector=MASTERDOOR,#animation=ANIMATE_CEILING_LIFT,
           #height=128,#speed=16);
      send(self,@SetSector,#sector=ASSISTDOOR,#animation=ANIMATE_CEILING_LIFT,
           #height=128,#speed=16);
      
      return;
   }

   Delete()
   {
      if ptReset <> $
      {
         DeleteTimer(ptReset);
         ptReset = $;
      }

      if ptEntrance <> $
      {
         DeleteTimer(ptEntrance);
         ptEntrance = $;
      }

      if ptStorage <> $
      {
         DeleteTimer(ptStorage);
         ptStorage = $;
      }

      if ptLighting <> $
      {
         DeleteTimer(ptLighting);
         ptLighting = $;
      }

      propagate;
   }                                    
   
   SomethingTryGo(what = $,row = $,col = $)
   {
      if (row = 29) AND (col < 24)
      {
         send(self,@SetSector,#sector=WESTDOOR,#animation=ANIMATE_CEILING_LIFT,
              #height=204,#speed=16);
         ptReset = CreateTimer(self,@ResetTimer,RESET_TIME_LONG);

         return TRUE;
      }

      if (row = 29) AND (col > 25)
      {
         send(self,@SetSector,#sector=EASTDOOR,#animation=ANIMATE_CEILING_LIFT,
              #height=204,#speed=16);
         ptReset = CreateTimer(self,@ResetTimer,RESET_TIME_LONG);

         return TRUE;
      }

      if ((row > 35) OR (row < 39)) AND (col = 33)
      {
         send(self,@SetSector,#sector=MASTERDOOR,#animation=ANIMATE_CEILING_LIFT,
              #height=204,#speed=16);
         ptReset = CreateTimer(self,@ResetTimer,RESET_TIME_LONG);

         return TRUE;
      }

      if (row = 33) AND ((col = 36) OR (col = 35))
      {
         send(self,@SetSector,#sector=ASSISTDOOR,#animation=ANIMATE_CEILING_LIFT,
              #height=204,#speed=16);
         ptReset = CreateTimer(self,@ResetTimer,RESET_TIME_LONG);

         return TRUE;
      }

      if row = 43 AND (col < 26 AND col > 23)
      {
         if send(self,@ReqLegalEntry,#who=what)
         {
            send(self,@OpenEntranceDoor);

            return TRUE;
         }
      }

      propagate;
   }

   CreateStandardObjects()
   {
      Send(self,@NewHold,#what=Create(&Table),#new_row=31,#new_col=10);
      Send(self,@NewHold,#what=Create(&Table),#new_row=31,#new_col=12);
      Send(self,@NewHold,#what=Create(&Table),#new_row=33,#new_col=18);
      Send(self,@NewHold,#what=Create(&Table),#new_row=36,#new_col=18);
      Send(self,@NewHold,#what=Create(&Table),#new_row=36,#new_col=14);
      Send(self,@NewHold,#what=Create(&Table),#new_row=34,#new_col=16);

      Send(self,@NewHold,#what=Create(&Firepit,#iLightIntensity=10),#new_row=40,#new_col=21,
           #fine_col=0,#fine_row=16);
      Send(self,@NewHold,#what=Create(&Firepit,#iLightIntensity=10),#new_row=40,#new_col=29,
           #fine_col=0,#fine_row=16);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0,#iLightIntensity=10),#new_row=43,#new_col=23,
           #fine_row=0);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0,#iLightIntensity=10),#new_row=43,#new_col=26,
           #fine_row=0);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0,#iLightIntensity=10),#new_row=34,#new_col=21,
           #fine_row=16,#fine_col=0);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0,#iLightIntensity=10),#new_row=34,#new_col=29,
           #fine_row=16,#fine_col=0);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0,#iLightIntensity=10),#new_row=30,#new_col=21);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0,#iLightIntensity=10),#new_row=30,#new_col=28);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0,#iLightIntensity=10),#new_row=28,#new_col=21);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0,#iLightIntensity=10),#new_row=28,#new_col=28);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0,#iLightIntensity=10),#new_row=28,#new_col=19);
      Send(self,@NewHold,#what=Create(&Firepit,#iLightIntensity=10),#new_row=30,#new_col=19);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0,#iLightIntensity=10),#new_row=28,#new_col=30);
      Send(self,@NewHold,#what=Create(&Firepit,#iLightIntensity=10),#new_row=30,#new_col=30);
      Send(self,@NewHold,#what=Create(&Firepit,#iLightIntensity=10),#new_row=23,#new_col=21,
           #fine_row=48,#fine_col=0);
      Send(self,@NewHold,#what=Create(&Firepit,#iLightIntensity=10),#new_row=23,#new_col=29,
           #fine_row=48,#fine_col=0);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0,#iLightIntensity=50),#new_row=6,#new_col=9,
           #fine_row=48,#fine_col=16);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=20,#iLightIntensity=50),#new_row=10,#new_col=5,
           #fine_row=32,#fine_col=0);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0,#iLightIntensity=50),#new_row=14,#new_col=9,
           #fine_col=16,#fine_row=16);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0,#iLightIntensity=50),#new_row=14,#new_col=40,
           #fine_row=16,#fine_col=48);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=20,#iLightIntensity=50),#new_row=10,#new_col=45,
           #fine_row=32,#fine_col=0);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0,#iLightIntensity=50),#new_row=6,#new_col=40,
           #fine_col=48,#fine_row=48);

      Send(self,@NewHold,#what=Create(&Brazier),#new_row=6,#new_col=24,
           #fine_row=56,#fine_col=8);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=6,#new_col=25,
           #fine_row=56,#fine_col=56);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=6,#new_col=23,
           #fine_row=56,#fine_col=16);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=6,#new_col=21,
           #fine_row=56,#fine_col=48);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=6,#new_col=26,
           #fine_row=56,#fine_col=48);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=6,#new_col=28,
           #fine_row=56,#fine_col=16);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=35,#new_col=36,
           #fine_col=48);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=35,#new_col=40);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=40,#new_col=30);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=40,#new_col=36);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=44,#new_col=36,
           #fine_row=0);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=44,#new_col=30,
           #fine_row=0);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=31,#new_col=8,
           #fine_col=0);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=25,#new_col=10,
           #fine_row=48,#fine_col=32);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=23,#new_col=12,
           #fine_row=0,#fine_col=0);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=24,#new_col=14);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=23,#new_col=38,
           #fine_col=0);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=23,#new_col=33,
           #fine_col=0);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=45,#new_col=27,
           #fine_row=24,#fine_col=8);
      Send(self,@NewHold,#what=Create(&Brazier),#new_row=35,#new_col=35,
           #fine_row=32,#fine_col=32);

      Send(self,@NewHold,#what=Create(&Chest),
           #new_row=43,#new_col=15,#fine_row=32,#fine_col=40,#new_angle=ANGLE_NORTH);
      Send(self,@NewHold,#what=Create(&Chest),
           #new_row=43,#new_col=12,#fine_row=16,#fine_col=48,#new_angle=ANGLE_NORTH_EAST);
      Send(self,@NewHold,#what=Create(&Chest),
           #new_row=43,#new_col=18,#fine_row=16,#fine_col=16,#new_angle=ANGLE_NORTH_WEST);

      propagate;
   }

   CreateHotPlates()
   {
      local lHotPlates, i, oPlate;

      lHotPlates = [ [43,23,1], [43,24,1], [43,25,1], [43,26,1], [43,27,2], [43,22,2],
                     [42,23,2], [42,24,2], [42,25,2], [42,26,2], [42,27,2], [42,22,2]
                   ];

      for i in lHotPlates
      {
         oPlate = Create(&Hotplate,#hpid=nth(i,3));
         send(self,@NewHold,#what=oPlate,#new_row=nth(i,1),#new_col=nth(i,2));
      }

      return;
   }

   CreateStandardExits()
   {
      plEdge_Exits = $;

      plEdge_Exits = Cons([LEAVE_SOUTH, RID_JASPER, 73,36, ROTATE_180], plEdge_exits);

      return;
   }

   DefensesDown()
   {      
      ptLighting = CreateTimer(self,@LightFlicker,1000);

      return;
   }

   LightFlicker()
   {
      % Is the hall being raided?   
      if piStatus = 1     
      {
         if piBaseLight = FLICKER_LOW
         {
            send(self,@SetBaseLight,#amount=FLICKER_HIGH);
         }
         else
         {
            send(self,@SetBaseLight,#amount=FLICKER_LOW);
         }

         ptLighting = CreateTimer(self,@LightFlicker,2000);
      }
      else
      {
         ptLighting = $;
         send(self,@DefensesUp);
      }

      return;
   }

   DefensesUp()
   {
      if ptLighting <> $
      {
         deletetimer(ptLighting);
         ptLighting = $;
      }

      send(self,@SetBaseLight,#amount=FLICKER_NONE);

      return;
   }

   ClaimGuildHall()
   {
      send(self,@DefensesUp);

      propagate;
   }

   ResetGuildHall()
   {
      send(self,@DefensesUp);

      propagate;
   }

   ConquerTimer()
   {
      send(self,@DefensesUp);

      propagate;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
