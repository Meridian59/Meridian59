% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Guest5 is Room

constants:

   include blakston.khd

resources:

   room_name_guest5 = "The Home of Roderic D'Stane"
   room_guest5 = guest5.roo
   guest5_music = login.mid

   guest5_signname = "communication"
   guest5_sign = \
      "Being able to communicate is an important part of Meridian, "
      "whether you're solving a quest or you're plotting with your "
      "allies. The most common way to communicate is with the SAY "
      "command. For example, if you type SAY HELLO, the elder in this "
      "hut will respond. The hotkey for SAY is F, which will automatically "
      "bring you down to the chat window.\n\n"             
      "Any other player who happens to be in the same map area as you "
      "can hear what you say.  However, most shopkeepers and elders "
      "are hard of hearing; you need to get close for them to hear you.\n\n"
      "There are other communications options.  For example, you may see other "
      "players broadcasting what's going on in the rest of the world. "
      "However, for the most part, you will not have these capabilities "
      "unless you become involved in the full version of the game.\n"
      "-------------------------\n"
      "Say QUEST to see what you should do next."

classvars:

   vrName = room_name_guest5
   vrSign = guest5_sign

   viTeleport_row = 2
   viTeleport_col = 2

   viDemo_base = RID_GUEST_BASE

   viPermanent_flags = ROOM_NO_COMBAT | ROOM_GUEST_AREA
   viTerrain_type = TERRAIN_CITY | TERRAIN_RESIDENCE

properties:

   prRoom = room_guest5
   piRoom_num = RID_guest5

   piBaseLight = LIGHT_NICE
   piOutside_factor = OUTDOORS_SOME

   prMusic = guest5_music
      
   pbAllowNewbies = TRUE

messages:


   CreateStandardExits()
   {
      plExits = $;

      plExits = Cons([ 1, 2, viDemo_base + 2, 25, 52, ROTATE_NONE ],plExits);
      plExits = Cons([ 1, 3, viDemo_base + 2, 25, 52, ROTATE_NONE ],plExits);
      plExits = Cons([ 1, 4, viDemo_base + 2, 25, 52, ROTATE_NONE ],plExits);

      propagate;
   }

   CreateStandardObjects()
   {
      local oSign;
      
      send(self,@NewHold,#what=Create(&HazarElder),#new_row=5,#new_col=3,#fine_row=32,#fine_col=32,
           #new_angle=ANGLE_EAST);

      oSign = Create(&Sign,#desc=vrSign,#newbie=TRUE,#name=guest5_signname);
      send(self,@NewHold,#what=oSign,#new_row=3,#new_col=2,#fine_row=32,#fine_col=00);

      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_JUG),
           #new_row=2,#new_col=4,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_URN),
           #new_row=4,#new_col=4,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_SKULL7),
           #new_row=4,#new_col=2,#fine_row=48,#fine_col=48,#angle=ANGLE_NORTH);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_FIXINS),
           #new_row=4,#new_col=1,#fine_row=48,#fine_col=48,#angle=ANGLE_NORTH);

      % Lighting
      send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=1,#new_col=3,#fine_row=45,#fine_col=27); 

      propagate;
   }

   SeanceCheck()
   {
      return FALSE;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
