% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
OutdoorsC4 is MonsterRoom

constants:

   include blakston.khd

resources:

   room_OutdoorsC4 = C4.roo
   room_name_OutdoorsC4 ="Deep Woods of Ileria"
   OutdoorsC4_music = walk7.mid

classvars:

   vrName = room_name_OutdoorsC4

   viTeleport_row = 30
   viTeleport_col = 21

   viTerrain_type = TERRAIN_FOREST

   viFlag_row = 40
   viFlag_col = 41

properties:

   prRoom = room_OutdoorsC4
   prMusic = OutdoorsC4_music
   piRoom_num = RID_C4

   piBaseLight = LIGHT_NICE
   piOutside_factor = 8

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   piGen_time = 80000
   piGen_percent = 80
      
   pbAllowNewbies = TRUE

messages:

   Constructed()
   {
      plMonsters = [ [&SpiderBaby, 60], [&Ent, 40] ];

      plGenerators = [ [37, 14], [26, 33], [6, 50], [15, 51], [19, 45],
		      [24, 45], [16, 36], [20, 25], [23, 25], [29, 24],
		      [29, 17], [33, 20], [41, 27], [36, 42], [39, 40] ];
      propagate;
   }

   CreateYellZoneList()
   {
      plYell_Zone = [ RID_MARION, RID_TEMPLE ];
      propagate;
   }

   SomethingMoved(what = $,new_row = $, new_col = $)
   {

      if (new_row > 35) and (new_col < 9) 
      {
	 Send(SYS,@UtilGoNearSquare,#what=what,
              #where=Send(SYS,@FindRoomByNum,#num=RID_MARION),
              #new_row=30,#new_col = 66 , #fine_row = 0,
	      #new_angle=Send(what,@GetAngle));
	 return;
      }

      if (new_row < 18) and (new_col < 13)
      {
	 Send(SYS,@UtilGoNearSquare,#what=what,
              #where=Send(SYS,@FindRoomByNum,#num=RID_TEMPLE),
              #new_row=9,#new_col = 31,
	      #new_angle=ANGLE_SOUTH_WEST);
	 return;
      }

   propagate;
   }


   CreateStandardExits()
   {
      plEdge_Exits = $;
      plEdge_Exits = Cons([LEAVE_EAST, RID_D4, 21, 2, ROTATE_NONE], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_NORTH, RID_C3, 40, 13, ROTATE_NONE], plEdge_exits);

      return;
   }         

   CreateStandardObjects()
   {

      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=6,#new_col=50);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=8,#new_col=52);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=5,#new_col=53);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=11,#new_col=47);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=14,#new_col=50);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=17,#new_col=47);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=17,#new_col=45);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=19,#new_col=50);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=21,#new_col=47);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=22,#new_col=44);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=25,#new_col=45);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=25,#new_col=36);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=21,#new_col=33);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=16,#new_col=35);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=16,#new_col=37);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=28,#new_col=28);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=30,#new_col=19);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=32,#new_col=22);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=29,#new_col=22);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=32,#new_col=26);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=34,#new_col=20);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=23,#new_col=21);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=19,#new_col=24);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=22,#new_col=25);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=19,#new_col=27);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=41,#new_col=26);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=34,#new_col=10);
%      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
%          #new_row=32,#new_col=6);  % (half buried into the wall of trees)
      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
