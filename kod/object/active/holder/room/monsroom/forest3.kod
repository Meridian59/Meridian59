% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Forest3 is MonsterRoom
   
   
constants:

   include blakston.khd
   
   
resources:
   
   room_forest3 = forest3.roo
   room_name_forest3 = "The Forests of Meridian"
   
   forest3_music = forest.mid

classvars:

   vrName = room_name_forest3

   viTeleport_row = 18
   viTeleport_col = 15

   viTerrain_type = TERRAIN_FOREST

properties:
   
   prRoom = room_forest3
   piRoom_num = RID_FOREST3

   prMusic = forest3_music
                            
   piBaseLight = LIGHT_DARK
   piOutside_factor = OUTDOORS_5

   piGen_time = 60000
   piGen_percent = 50


messages:

   Constructed()
   {
      plMonsters = [ [&Ant, 40], [&Spider, 60] ];

      plGenerators = [ [11, 7], [14, 13], [10, 23], [5, 32], [19, 20],
                       [25, 30], [35, 35], [37, 25], [44, 23], [20, 32], 
                       [25, 8] ];

      propagate;
   }

   CreateStandardExits()
   {
      plExits = $;

  %% HERMIT HUT
      plExits = Cons([ 13, 39, RID_HERMITHUT, 6, 6, ROTATE_NONE ],plExits);

      propagate;
   }

   StandardLeaveDir(what = $,dir = $,pos = $,new_room_num = $)
   {
      if (dir = LEAVE_NORTH)
      {
         if (send(what,@GetCol)) > 20
         {
            Send(SYS,@UtilGoNearSquare,#what=what,
                #where=Send(SYS,@FindRoomByNum,#num=RID_CANYON1),
                #new_row=52,#new_col=38,#new_angle=ANGLE_WEST);
         }
         else
         {
            Send(SYS,@UtilGoNearSquare,#what=what,
              #where=Send(SYS,@FindRoomByNum,#num=RID_FOREST2),
              #new_row=32,#new_col=58,#new_angle=ANGLE_NORTH);
         }
         return;
      }

      propagate;
   }

   SomethingMoved(what = $,new_row = $, new_col = $)
   {
      if ((new_row = 39)or(new_row = 40)) and (new_col = 19)
      {
	 Send(SYS,@UtilGoNearSquare,#what=what,
	      #where=Send(SYS,@FindRoomByNum,#num=RID_FOREST4),
	      #new_row=54,#new_col = 49, #new_angle=ANGLE_NORTH);
	 return;
      }
      propagate;
   }

   CreateStandardObjects()
   {
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=13,#new_col=9);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=4,#new_col=9);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
          #new_row=13,#new_col=6);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
          #new_row=18,#new_col=11);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
          #new_row=20,#new_col=14);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=14,#new_col=18);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=11,#new_col=21);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
          #new_row=9,#new_col=26);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
          #new_row=7,#new_col=24);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
          #new_row=6,#new_col=33);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=4,#new_col=28);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=21,#new_col=24);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=21,#new_col=26);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=19,#new_col=30);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
          #new_row=22,#new_col=35);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=28,#new_col=33);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
          #new_row=33,#new_col=36);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
          #new_row=36,#new_col=30);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=41,#new_col=25);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=44,#new_col=29);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
          #new_row=21,#new_col=33);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
          #new_row=17,#new_col=36);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=26,#new_col=34);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=19,#new_col=35);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
          #new_row=20,#new_col=23);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
          #new_row=16,#new_col=15);

      propagate;
   }

   SeanceCheck()
   {
      return FALSE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
