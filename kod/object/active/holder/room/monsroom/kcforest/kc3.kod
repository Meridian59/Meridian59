% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
OutdoorsKC3 is KCForest

constants:

   include blakston.khd

resources:

   room_name_OutdoorsKC3 ="Ruins of the Riija Temple"
   room_OutdoorsKC3 = KC3.roo
   OutdoorsKC3_music = orcbeg.mid

classvars:

   vrName = room_name_OutdoorsKC3

   viTeleport_row = 38
   viTeleport_col = 32
   viTerrain_type = TERRAIN_JUNGLE

properties:

   prRoom = room_OutdoorsKC3
   prMusic = OutdoorsKC3_music
   piRoom_num = RID_KC3

   piBaseLight = LIGHT_NICE
   piOutside_factor = 8

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   piGen_time = 30000
   piGen_percent = 70

   piInit_count_min = 8
   piInit_count_max = 12

   piMonster_count_max = 20

messages:

   Constructed()
   {
      plMonsters = [ [&Avar, 60], [&AvarShaman, 25], [&AvarChieftain, 15]];
      plGenerators = [ [14,54], [18,27], [53,39], [46,23], [30,32],
                       [33,37], [40,37], [34,27], [25,28]
                     ];

      propagate;
   }

   CreateStandardExits()
   {
      plEdge_Exits = $;
      plEdge_Exits = Cons([LEAVE_NORTH, RID_KC2, 49, 18, ROTATE_NONE], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_WEST, RID_KB3, 25, 49, ROTATE_NONE, ROW_IS_LESS_THAN, 35], plEdge_exits);      
      plEdge_Exits = Cons([LEAVE_WEST, RID_KB4, 11, 49, ROTATE_NONE, ROW_IS_GREATER_THAN, 35], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_SOUTH, RID_KC4, 1, 39, ROTATE_NONE], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_EAST, RID_KD2, 30, 1, ROTATE_NONE, ROW_IS_LESS_THAN, 20], plEdge_exits);      
      plEdge_Exits = Cons([LEAVE_EAST, RID_KD3, 33, 1, ROTATE_NONE, ROW_IS_GREATER_THAN, 20], plEdge_exits);

      propagate;
   }

   CreateStandardObjects()
   {
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=45,#new_col=31,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=50,#new_col=37,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=44,#new_col=19,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=33,#new_col=15,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=23,#new_col=20,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=18,#new_col=24,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=7,#new_col=18,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=16,#new_col=29,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=24,#new_col=47,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=17,#new_col=53,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=13,#new_col=45,#fine_row=0,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=8,#new_col=53,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=36,#new_col=53,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=48,#new_col=49,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=55,#new_col=46,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=25,#new_col=13,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=11,#new_col=19,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=5,#new_col=25,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TREE2),
           #new_row=12,#new_col=25,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);

      propagate;
   }  
  
   GetClan()
   {
      if random(1,2) = 1
      {  return AVARCLAN_PROMAGIC;  }
      
      return AVARCLAN_ANTIMAGIC;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
