% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
OutdoorsKC5 is KCForest

constants:

   include blakston.khd

   MAX_QUEENS = 5

resources:

   room_name_OutdoorsKC5 ="Outside the Mad Scientist's Hut"
   room_OutdoorsKC5 = KC5.roo
   OutdoorsKC5_music = madsci.mid

classvars:

   vrName = room_name_OutdoorsKC5

   viTeleport_row = 31
   viTeleport_col = 31
   viTerrain_type = TERRAIN_JUNGLE

properties:

   prRoom = room_OutdoorsKC5
   prMusic = OutdoorsKC5_music
   piRoom_num = RID_KC5

   piBaseLight = LIGHT_NICE
   piOutside_factor = 8

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   piGen_time = 900000
   piGen_percent = 5

   piInit_count_min = 2
   piInit_count_max = 3

   piMonster_count_max = 5

messages:

   Constructed()
   {
      plMonsters = [ [&DragonflyQueen, 100] ];

      plGenerators = $;

      plGenerators = Cons([32,32],plGenerators);
      plGenerators = Cons([34,37],plGenerators);
      plGenerators = Cons([37,34],plGenerators);
      plGenerators = Cons([35,33],plGenerators);
      plGenerators = Cons([35,35],plGenerators);

      propagate;
   }

   CreateJungleItemCoords()
   {      
      plItem_coords = [	[&FireSand,24,45],
                        [&FireSand,17,36]
                      ];

      % Do not propagate
      return;
   }

   CreateStandardExits()
   {
      plEdge_Exits = $;
      plEdge_Exits = Cons([LEAVE_NORTH, RID_KC4, 75, 26, ROTATE_NONE], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_WEST, RID_KB5, 6, 49, ROTATE_NONE], plEdge_exits);

      plExits = $;

      plExits = Cons([ 31, 23, RID_MAD_SCIENTIST_HUT, 4, 3, ROTATE_NONE],plExits);
      plExits = Cons([ 32, 23, RID_MAD_SCIENTIST_HUT, 4, 3, ROTATE_NONE ],plExits);
      plExits = Cons([ 35, 30, RID_MAD_SCIENTIST_HUT, 6, 7, ROTATE_NONE ],plExits);

      propagate;
   }
   
   NewHold(what = $, new_row = $, new_col = $)
   {
      local oMadScientist;

      if what <> $
         AND new_row <> $ AND new_col <> $
         AND isClass(what,&DragonFlyQueen)
      {
         if Send(self,@InPen,#iRow=new_row,#iCol=new_col)
            AND Send(what,@GetMaster) = $
         {
            oMadScientist = First(Send(Send(SYS,@GetLibrary),@GetOccupationList,
                                  #cNPC_class=&KocatanMadScientist));

            Send(what,@SetMaster,#oMaster=oMadScientist);
         }
         
         Post(self,@CapQueens);
      }
      
      propagate;
   }

   AddNewQueenToPen(oQueen = $)
   "Called by quest nodes to add queens to the pen."
   {
      return Send(self,@NewHold,#what=oQueen,#new_row=random(32,38),
                  #new_col=random(32,35));
   }

   InPen(iRow = $, iCol = $)
   {
      if iRow = $ OR iCol = $
      {
         return FALSE;
      }

      if iRow > 30 AND iRow < 40 AND iCol > 29 AND iCol < 39
      {
         return TRUE;
      }
      
      return FALSE;
   }

   CapQueens()
   {
      local iNumDel, i, oObject;

      iNumDel = Send(self,@CountHoldingHowMany,#class=&DragonFlyQueen) - MAX_QUEENS;

      % delete ones inside the pen first
      for i in plActive
      {
         if iNumDel <= 0
         {
            break;
         }

         oObject = Send(self,@HolderExtractObject,#data=i);
         
         if isClass(oObject,&DragonFlyQueen)
            AND Send(self,@InPen,#iRow=Send(oObject,@GetRow),#iCol=Send(oObject,@GetCol))
         {
            iNumDel = iNumDel - 1;
            Send(oObject,@Delete);
         }
      }

      % then delete ones outside the pen
      for i in plActive
      {
         if iNumDel <= 0
         {
            break;
         }
         
         oObject = Send(self,@HolderExtractObject,#data=i);

         if isClass(oObject,&DragonFlyQueen)
         {
            iNumDel = iNumDel - 1;
            Send(oObject,@Delete);
         }
      }
      
      return;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
