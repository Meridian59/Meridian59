% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Necropolis5 is MonsterRoom

constants:

   include blakston.khd

resources:

   room_name_Necropolis5 = "Ruins of Castle Brax"
   room_Necropolis5 = necarea5.roo
   Necropolis5_music = nec02.mp3

   Necropolis5_loop = necloop4.wav

   Necropolis4_locked_door = \
      "The large stone doors are firmly stuck, probably by mounds of rubble on "
      "the other side."

   necroarea5_guildwarning = "Your amulet vibrates gently for a moment."

classvars:

   vrName = room_name_Necropolis5

   viTeleport_row = 10
   viTeleport_col = 3

   viTerrain_type = TERRAIN_NECROPOLIS

properties:

   prRoom = room_Necropolis5
   piRoom_num = RID_NECROAREA5

   piBaseLight = LIGHT_MIN
   piOutside_factor = 0

   piGen_time = 40000
   piGen_percent = 80

   piInit_count_min = 7
   piInit_count_max = 9

   piMonster_count_max = 25

   prMusic = Necropolis5_music

messages:

   Constructed()
   {
      plMonsters = [ [&DaemonSkeleton, 60], [&NarthylWorm, 40] ];
      plGenerators = [ [8,18], [15,18], [15,32], [8,31] ];

      plLooping_sounds = [ [Necropolis5_loop, 0, 0, 200, 100] ];

      propagate;
   }

   CreateStandardExits()
   {
      plEdge_exits = $;

      plEdge_Exits = Cons([LEAVE_WEST, RID_NECROAREA4, 23, 49, ROTATE_NONE], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_SOUTH, RID_LICH_MAZE, 2, 35, ROTATE_NONE, COL_IS_GREATER_THAN,15], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_SOUTH, RID_LICH_MAZE, 3, 21, ROTATE_NONE, COL_IS_LESS_THAN,15], plEdge_exits);

      plExits = $;

      plExits = Cons([  9, 34, ROOM_LOCKED_DOOR, Necropolis4_locked_door ],plExits);
      plExits = Cons([ 10, 34, ROOM_LOCKED_DOOR, Necropolis4_locked_door ],plExits);
      plExits = Cons([ 11, 34, ROOM_LOCKED_DOOR, Necropolis4_locked_door ],plExits);

      plExits = Cons([ 11, 12, RID_NECROAREA5, 11, 15, ROTATE_NONE ],plExits);
      plExits = Cons([ 12, 12, RID_NECROAREA5, 11, 15, ROTATE_NONE ],plExits);
      plExits = Cons([ 10, 14, RID_NECROAREA5, 11, 11, ROTATE_NONE ],plExits);
      plExits = Cons([ 11, 14, RID_NECROAREA5, 11, 11, ROTATE_NONE ],plExits);
      plExits = Cons([ 12, 14, RID_NECROAREA5, 11, 11, ROTATE_NONE ],plExits);

      plExits = Cons([ 11, 2, RID_NECROAREA4, 13, 49, ROTATE_NONE ],plExits);
      plExits = Cons([ 12, 2, RID_NECROAREA4, 13, 49, ROTATE_NONE ],plExits);

      plExits = Cons([ 32, 32, RID_LICH_MAZE, 2, 45, ROTATE_NONE ],plExits);
      plExits = Cons([ 32, 33, RID_LICH_MAZE, 2, 45, ROTATE_NONE ],plExits);

      propagate;
   }

   CreateStandardObjects()
   {
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_NECTREE1),
           #new_row=13,#new_col=6,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_NECTREE1),
           #new_row=9,#new_col=5,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_NECTREE4),
           #new_row=13,#new_col=11,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_NECSLIME),
           #new_row=10,#new_col=11,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_NECSLIME),
           #new_row=12,#new_col=9,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_NECSLIME),
           #new_row=13,#new_col=4,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_NECSLIME),
           #new_row=9,#new_col=2,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=10,#new_col=29,
           #fine_row=16,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=13,#new_col=29,
           #fine_row=16,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=10,#new_col=20,
           #fine_row=48,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=13,#new_col=20,
           #fine_row=48,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_NECVASE),
           #new_row=7,#new_col=33,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_NECVASE2),
           #new_row=9,#new_col=34,#fine_row=0,#fine_col=0,#angle=ANGLE_EAST);

      propagate;
   }

   NewHold(what=$)
   {
      local oNecroGuild,lMembers,oNecro,iChance;

      if IsClass(what,&User) AND NOT IsClass(what,&dm)
      {
         oNecroGuild = send(send(SYS,@FindRoomByNum,#num=RID_GUILDH15),@GetGuildOwner);
         if oNecroGuild <> $
         {
            if NOT send(what,@IsUsingA,#Class=&NecromancerAmulet)
            {
               iChance = 10;
               if send(what,@FindHoldingActive,#class=&HunterSword) <> $
               {
                  iChance = iChance/2;
               }

               if random(1,iChance) = 1
               {
                  lMembers = send(oNecroGuild,@GetMemberList);
                  oNecro = First(nth(lMembers,random(1,length(lMembers))));
                  if send(oNecro,@isLoggedOn)
                  {
                     Send(oNecro,@MsgSendUser,#message_rsc=necroarea5_guildwarning);
                  }
               }
            }
         }
      }

      propagate;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
