% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Armor is DefenseModifier

constants:

   include blakston.khd

resources:

   armor_condition_exc = " is without blemish or flaw."
   armor_condition_exc_mended = " is in great condition, but has been repaired before."
   armor_condition_good = " has a dent or two."
   armor_condition_med = " is nicked and scarred from battle."
   armor_condition_poor = " has been rent and torn by fierce attacks and may not last much longer."
   armor_condition_broken = " is useless.  It has been torn into several pieces from the wear and strain of battle."

classvars:

   viUse_type = ITEM_USE_BODY
   viUse_amount = 1
   viSpell_modifier = -25
   vrPoss_article = object_article_cap_this_rsc
      
   viGround_group = 2
   viInventory_group = 1
   viBroken_group = 3
   
   vbShow_condition = TRUE
   vrCondition_exc = armor_condition_exc 
   vrCondition_exc_mended = armor_condition_exc_mended 
   vrCondition_good = armor_condition_good 
   vrCondition_med = armor_condition_med 
   vrCondition_poor = armor_condition_poor 
   vrCondition_broken = armor_condition_broken

properties:

messages:   

   ReqUseSomething(what = $)
   {
      if IsClass(what,&Armor)
      {
         if Send(poOwner,@TryUnuseItem,#what=self)
         {
            propagate;
         }
         else
         {
            return FALSE;
         }
      }

      propagate;
   }
   
   ReqRepair()
   {
      return TRUE;
   }
   
   SendInventoryAnimation()
   {
      if piHits > 0 OR viBroken_group = $
      {
         propagate;
      }

      if (piItem_flags & ITEM_PALETTE_MASK) <> 0
      {
         AddPacket(1,ANIMATE_TRANSLATION,1,piItem_flags & ITEM_PALETTE_MASK);
      }

      AddPacket(1,ANIMATE_NONE,2,viBroken_group);

      return;
   }

   SendLookAnimation()
   {
      if piHits > 0 OR viBroken_group = $
      {
         propagate;
      }

      if (piItem_flags & ITEM_PALETTE_MASK) <> 0
      {
         AddPacket(1,ANIMATE_TRANSLATION,1,piItem_flags & ITEM_PALETTE_MASK);
      }

      AddPacket(1,ANIMATE_NONE,2,viBroken_group);

      return;
   }

   SendAnimation()
   {
      if piHits > 0 OR viBroken_group = $
      {
         propagate;
      }

      if (piItem_flags & ITEM_PALETTE_MASK) <> 0
      {
         AddPacket(1,ANIMATE_TRANSLATION,1,piItem_flags & ITEM_PALETTE_MASK);
      }

      AddPacket(1,ANIMATE_NONE,2,viBroken_group);

      return;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
