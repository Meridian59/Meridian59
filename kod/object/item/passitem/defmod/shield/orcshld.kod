% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
OrcShield is Shield

constants:

   include blakston.khd

resources:

   OrcShield_name_rsc = "orc shield"
   OrcShield_icon_rsc = osh.bgf
   OrcShield_desc_rsc = \
      "The skull that decorates the face of the shield offers a fair "
      "amount of fear to potential opponents, but the shield seems to "
      "be far more decorative than useful.  Still, there seems to be a "
      "darker edge to the shield that you can't place your finger on, and "
      "one wonders if this device has some hidden attribute."

   orcshield_cant = "You try to grab the handle of the shield, but it insistently slips out of your fingers."

   OrcShield_window_overlay_rsc = povosh.bgf

classvars:

   vrName = OrcShield_name_rsc
   vrIcon = OrcShield_icon_rsc
   vrDesc = OrcShield_desc_rsc

   viHits_init_min = 250
   viHits_init_max = 300

   viValue_average = 1000
   viWeight = 250
   viBulk = 200


   vrShield_window_overlay = OrcShield_window_overlay_rsc
   vrShield_overlay = OrcShield_icon_rsc

   viBroken_group = 4
   viGround_group = 3
   viInventory_group = 1

   viDefense_base = 20
   viDamage_base = 2

properties:

messages:
   
   ReqUse()
   {
      if send(poOwner,@GetKarma) > -50  
      { 
         send(poOwner,@MsgSendUser,#message_rsc=orcshield_cant);
         
         return FALSE; 
      }
      
      propagate;
   }

   GetBaseSpellModifier(oSpell=$)
   {
      if send(oSpell,@GetSchool) = SS_SHALILLE
      {
         return -15;
      }
      
      if send(oSpell,@GetSchool) = SS_QOR
      {
         return 15;
      }

      return 0;
   }

   GetResistanceModifiers()
   {
      return [ [ATCK_WEAP_PIERCE,15],
               [-ATCK_SPELL_HOLY,-20]
             ];
   }

   SendOverlayAnimation(animation = $)
   {
      AddPacket(1,ANIMATE_NONE,2,2);
      if (piItem_flags & ITEM_PALETTE_MASK) <> 0
      {
         AddPacket(1,ANIMATE_TRANSLATION,1,piItem_flags & ITEM_PALETTE_MASK);
      }

      return;
   }   


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
