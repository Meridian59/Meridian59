% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
DragonSkull is PassiveObject

constants:

   include blakston.khd

resources:

   DragonSkull_name_rsc = "dragon's skull"
   DragonSkull_icon_rsc = dragskul.bgf
   DragonSkull_desc_rsc = \
   "Skull of what appears to be of a legendary dragon. "
   "Dragons were creatures that once existed on the continents of the great Nexus, "
   "but until the great collapse were considered to have been extinct for over a century. "
   
   DragonSkull_wav_rsc = "drg_dth.wav"
   DragonSkull_portaloflife_sound = "sraised.wav"
   
   DragonSkull_summon = "A dragon has been summoned!"
   DragonSkull_already_summoned = "It will be wise not to summon another dragon here."
   
   DragonSkull_projectile = "lightnin.bgf"

classvars:

   vrName = DragonSkull_name_rsc
   vrIcon = DragonSkull_icon_rsc
   vrDesc = DragonSkull_desc_rsc

properties:

messages:

   ReqNewOwner(what = $)
   {
      return False;
   }
   
   RessurectDragon(who = $)
   {
   	  local oSpell;
   
	  if Send(poOwner,@CountMonsters,#class=&BlueDragon)
	  {
		 Send(who,@MsgSendUser,#message_rsc=DragonSkull_already_summoned);
		 return FALSE;
	  }
	  
	  Send(poOwner,@SomethingWaveRoom, #what=who, #wave_rsc=DragonSkull_portaloflife_sound);
	  Send(poOwner,@SomethingWaveRoom, #what=self, #wave_rsc=DragonSkull_wav_rsc);
	  
	  Send(poOwner,@SomethingShot,#who=who,#target=self,#projectile=self);
	  
	  oSpell = Send(SYS,@FindSpellByNum,#num=SID_ARMAGEDDON);
	  send(oSpell,@CastSpell,#who=self);
	  
	  Post(who,@MsgSendUser,#message_rsc=DragonSkull_summon);
	  
	  Send(poOwner,@NewHold,#what=Create(&BlueDragon),#new_row=Send(self,@GetRow),#new_col=Send(self,@GetCol));
   
	  return TRUE;
   }
   
   GetProjectileIcon()
   {
      return DragonSkull_projectile;
   }

   GetProjectileSpeed()
   {
      return 8;
   }
   
   SendProjectileAnimation()
   {
      AddPacket(1, ANIMATE_CYCLE, 4, 40, 2, 1, 2, 5);   % 40ms between animations

      return;
   }

   GetProjectileLightFlags()
   {
      % No lighting information.
      return LIGHT_FLAG_NONE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
