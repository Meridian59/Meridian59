% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
KocatanBrazier is Flickerer

constants:

   include blakston.khd

   HS_kocatanbrazier = 1

resources:

   kocatanbrazier_name_rsc = "settlement lamp"
   kocatanbrazier_icon_rsc = koclamp.bgf
   kocatanbrazier_desc_rsc = \
      "By order of the A'ach Tezcha these lamps are to remain lit during hours of darkness."

   kocatanbrazier_flame_rsc = kocflame.bgf

classvars:

   vrName = kocatanbrazier_name_rsc
   vrIcon = kocatanbrazier_icon_rsc
   vrDesc = kocatanbrazier_desc_rsc

   viObject_flags = LOOK_NO

   % Lighting flags.  Default "on" and wavering flags
   viLightFlags = LIGHT_FLAG_ON | LIGHT_FLAG_WAVERING

   % Light color.
   viLightColor = LIGHT_FIRE

properties:

   % The base doesn't animate, just the overlay.
   piAnim_speed = 0
   piFlame_animation = 1

   % Intensity, from 0-255.
   piLightIntensity = 80

messages:

   Constructor(has_flame=TRUE)
   {
      if has_flame
      {
         piFlame_animation = Random(1,4);
      }
      else
      {
         pbIsLit = FALSE;
      }

      propagate;
   }

   SetAnimationSpeed()
   {
      % The base doesn't animate, just the overlay.
      piAnim_speed = 0;

      return;   
   }

   ReqNewOwner(what = $)
   {
      return FALSE;
   }

   SetFlame(has_flame=TRUE)
   {
      if has_flame
      {
         piFlame_animation = Random(1,4);
      }
      else
      {
         pbIsLit = FALSE;
      }

      Send(poOwner,@SomethingChanged,#what=self);

      return;
   }

   SendOverlays()
   {
      % Send overlay bitmap info to user.  

      if NOT pbIsLit
      {
         propagate;
      }

      % We have one overlay, the flame
      AddPacket(1,1);
         
      % always animate the flame in a cycle
      AddPacket(4,kocatanbrazier_flame_rsc,1,HS_kocatanbrazier,1,ANIMATE_CYCLE);
      
      % but have different cycle groups
      
      if piFlame_animation = 1
      {
         AddPacket(4,50,2,1,2,5); 
         return;
      }
         
      if piFlame_animation = 2
      {
         AddPacket(4,60,2,1,2,8);
         return;
      }
         
      if piFlame_animation = 3
      {
         AddPacket(4,70,2,5,2,7);
         return;
      }
         
      % if piFlame_animation = 4
      AddPacket(4,40,2,3,2,6);

      return;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
