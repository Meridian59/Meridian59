% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Defile is Spell

constants:
   include blakston.khd

   DEFILE_RECENT_LIST = 5

resources:

   defile_name_rsc = "defile"
   defile_icon_rsc = idefile.bgf
   defile_desc_rsc = \
      "In this darkest of rituals, the very spirit of Qor is "
      "summoned to defile the corpse of a murdered innocent, "
      "transforming flesh and blood into magical energy for "
      "the caster.  "
      "Requires fairy wings and the slain."

   defile_cast_rsc = "Your nausea betokens the imminence of Qor."

   defile_corpse_gone = \
      "Your defile spell fails because the corpse has already returned to the earth."

   defile_max = \
      "If you were to invite more eldritch energy inside of you, there is no "
      "telling what would happen!"
   defile_not_good = "Qor may only harvest the souls of the good at heart."

   defile_sound = qdefile.wav

classvars:

   vrName = defile_name_rsc
   vrIcon = defile_icon_rsc
   vrDesc = defile_desc_rsc

   viSpell_num = SID_DEFILE
   viSchool = SS_QOR

   viSpell_level = 3
   viMana = 0
   viMana_bonus = 10

   viCast_time = 10000
   viChance_to_Increase = 100

   vrSucceed_wav = defile_sound
   vbCastable_in_HappyLand = FALSE

properties:

   plRecent = $

messages:

   ResetReagents()
   {
      % separate message so can change, then set from admin mode

      plReagents = $;
      plReagents = Cons([&FairyWing, 1],plReagents);

      return;
   }

   GetNumSpellTargets()
   {
      return 1;
   }

   CanPayCosts(who = $, lTargets = $)
   {
      local target;
      
      % Can cast spell if the 1 target item is a corpse
      if Length(lTargets) <> 1
      {
	      return FALSE;
      }

      if send(who,@GetMana) >= (send(who,@GetMaxMana) * 3)
      {
	      Send(who,@MsgSendUser,#message_rsc=defile_max);

	      return FALSE; 
      }

      target = First(lTargets);
      if NOT IsClass(target, &DeadBody)
      {
	      Send(who,@MsgSendUser,#message_rsc=spell_bad_target, 
              #parm1=Send(self,@GetName),#parm2=Send(target,@GetDef),
              #parm3=Send(target,@GetName));

	      return FALSE;
      }

      if NOT Send(target,@WasGoodPlayer)
      {
	      Send(who,@MsgSendUser,#message_rsc=defile_not_good);           

	      return FALSE;
      }

      propagate;
   }

   CastSpell(who = $, lTargets = $, iSpellPower = 0)
   {
      local oTarget, oRoom, rRecent, bRecent, iKarmaAct;

      oTarget = First(lTargets);
      oRoom = Send(who,@GetOwner);
      
      if Send(oTarget,@GetOwner) <> oRoom
      {
	      Send(who,@MsgSendUser,#message_rsc=defile_corpse_gone);

	      return;
      }

      bRecent = FALSE;
      for rRecent in plRecent
      {
	      if send(oTarget,@GetCorpseName) = rRecent
	      {
	         bRecent = TRUE;

	         break;
	      }
      }

      if NOT bRecent
      {
         if abs(send(who,@GetKarma)) < (iSpellpower + 1)
         {
            iKarmaAct = bound(iKarmaAct,abs(send(who,@GetKarma)),iSpellpower+1);
         }
         else
         {
            iKarmaAct = abs(send(who,@GetKarma));
         }

	      send(who,@AddKarma,#amount=send(who,@CalculateKarmaChangeFromAct,
              #karma_act=-iKarmaAct,#karma_doer=send(who,@GetKarma),#swing_factor=4));
      }

      Send(who,@MsgSendUser,#message_rsc=defile_cast_rsc);
      Send(who,@GainMana,#amount=(viMana_bonus+(iSpellPower/3)));
      Send(oTarget,@Delete);

      propagate;
   }

   ImproveAbility(who=$,target=$)
   {
      local rRecent, rTarget;

      rTarget = send(target,@GetCorpseName);

      % plRecent is names of corpses defiled across whole server

      for rRecent in plRecent
      {
	      if rRecent = rTarget
	      {
	         % no advancement if same body name was defiled recently
	         return;
	      }
      }

      % Chop tail if recent is too long, then add new name to head
      if length(plRecent) >= DEFILE_RECENT_LIST
      {
	      rRecent = Nth(plRecent,DEFILE_RECENT_LIST);
	      plRecent = DelListElem(plRecent,rRecent);
      }

      plRecent = cons(rTarget, plRecent);

      propagate;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
