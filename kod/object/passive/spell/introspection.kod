% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Introspection is Spell

constants:
   include blakston.khd

resources:

   Introspection_name_rsc = "introspection"
   Introspection_icon_rsc = punchico.bgf

   caster_Introspection_msg = "You take some time to reflect upon your fighting techniques."
   Introspection_desc_rsc = \
   "Allows you to meditate for a moment to think about ways to improve your combat abilities."

   Introspection_message_nochance = "You have no chance of gaining a hit point, but will in about %i kills."
   Introspection_Message = "You have a %i out of %i chance (~B%i~B percent) of gaining a health point with each kill."
   Introspection_combat = "~BCombat stats: ~BOffense is %i, Defense is %i"

classvars:
   vrName = Introspection_name_rsc
   vrIcon = Introspection_icon_rsc
   vrDesc = Introspection_desc_rsc

   viCast_time = 0
   
   viSpell_num = SID_INTROSPECTION
   viSpell_level = 1
   viSchool = SS_KRAANAN
   viMana = 5
   viSpellExertion = 0
   viChance_To_Increase = 35
  
properties:
     
messages:

   Constructor()
   {
      propagate;
   }

   GetNumSpellTargets()
   {
      return 0;
   }

   CastSpell(who = $, lTargets = $)
   {
      local oRoom, lActive;

      lTargets = Cons(who, lTargets);
      oRoom = Send(who,@GetOwner);
      lActive = Send(oRoom,@GetHolderActive);
      
      Send(who,@MsgSendUser,#message_rsc=caster_Introspection_msg);
      Send(self,@ComputeEvaluateInfo,#who=First(lTargets),#dmis=who);
      
   propagate;
   }

   ComputeEvaluateInfo(who=$,dmis=$) %Generate a report for the player.
   {
      local highmark, gainchance, total, maxhealth;
      
      if IsClass(who,&Player)
      {
         highmark = Send(who,@GetHighMark); %Get the stats we need to the report.
         gainchance = Send(who,@GetGainChance);
         maxhealth = Send(who,@GetMaxHealth);

         if gainchance < 0
         {
            Send(dmis,@msgSenduser,#message_rsc = Introspection_message_nochance,
                #parm1=(gainchance/2)); %Compute the stats for the report.
         } 
         else 
         {
            total = bound(((gainchance*100)/highmark),1,100);
            Send(dmis,@msgSenduser,#message_rsc = Introspection_message,
                #parm1=gainchance,#parm2=highmark,#parm3=total); %Send the report to the player.
         }      

      }

      Send(dmis,@msgSenduser,#message_rsc=Introspection_combat,#parm1=Send(who,@GetOffense),
           #parm2=Send(who,@GetDefense));

   return;
   }
   
   IsGivenFreeToNewPlayers()
   "We need introspection to check stats and xp"
   {
      return TRUE;
   }

end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
