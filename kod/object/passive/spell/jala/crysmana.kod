% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
CrystalizeMana is Jala

constants:

   include blakston.khd

resources:

   CrystalizeMana_name_rsc = "crystalize mana"
   CrystalizeMana_icon_rsc = icrysman.bgf
   CrystalizeMana_desc_rsc = \
      "This song catches the mana expended in singing, crystalizing it into "
      "a physical form.  The mana crystal stores the mana for later use, in "
      "essence allowing the singer to store extra mana.  Only one crystal at "
      "a time can be created by a singer, but the longer this song is sung, "
      "the more mana that is stored in the crystal.  Since the mana is "
      "attuned to the singer, the crystal cannot be shared with others.  "
      "This song requires 1 sapphire and 1 uncut seraphym to sing."

   CrystalizeMana_song = song06.mid

   CrystalizeMana_no_room = \
      "You stop singing once you realize you won't be able to hold the mana "
      "crystal."

classvars:

   vrName = CrystalizeMana_name_rsc
   vrIcon = CrystalizeMana_icon_rsc
   vrDesc = CrystalizeMana_desc_rsc

   viSpell_num = SID_CRYSTALIZE_MANA
   viSchool = SS_JALA
   viSpell_level = 6

   viMana = 20
   viManaDrain = 2
   viDrainTime = 1000

   viSpellExertion = 30
   viChance_To_Increase = 25

   viHarmful = FALSE

properties:

   prMusic = CrystalizeMana_song
   pbUserEffects = TRUE
      
messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&Sapphire,1],plReagents);
      plReagents = Cons([&UncutSeraphym,1],plReagents);

      return;
   }

   StartPeriodicEnchantment(where=$, state=$)
   {
      local oCaster, iSpellpower, oCrystal, iAmount;

      % The caster is the second element of state.
      oCaster = Nth(state,2);

      % Our spellpower is in the third element of state.
      iSpellpower = Nth(state,3);

      % Find/create mana crystal.
      oCrystal = Send(oCaster,@FindHolding,#class=&ManaCrystal);

      if oCrystal = $
      {
         oCrystal = Create(&ManaCrystal,#oCaster=oCaster);
         if Send(oCaster,@ReqNewHold,#what=oCrystal)
         {
            Send(oCaster,@NewHold,#what=oCrystal);
         }
         else
         {
            % We couldn't hold it for some reason.  Destroy crystal.
            Send(oCrystal,@Delete);
            Send(oCaster,@MsgSendUser,#message_rsc=CrystalizeMana_no_room);

            % Stop the spell, use EVENT_STEER because we want it to break.
            Post(oCaster,@BreakTrance,#event=EVENT_STEER);

            propagate;
         }
      }

      % Increment mana amount in crystal.
      % Add at least 1 mana.
      iAmount = 1;

      % Add another one if we have enough spellpower.
      if random(1,99) <= iSpellpower
      {
         iAmount = iAmount + 1;
      }

      Send(oCrystal,@IncreaseMana,#amount=iAmount);

      propagate;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
