% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Jig is Jala

constants:

   include blakston.khd

resources:

   jig_name_rsc = "jig"
   jig_icon_rsc = ijig.bgf
   jig_desc_rsc = \
      "This spell causes everyone in the room to break out into dance "
      "and is lots of fun at parties.  Requires one diamond to cast."

   jig_song = jala2.mid
 
classvars:

   vrName = jig_name_rsc
   vrIcon = jig_icon_rsc
   vrDesc = jig_desc_rsc

   viMana = 10
   viManaDrain = 10
   viDrainTime = 5000
   viSpell_num = SID_JIG
   viSpellExertion = 10      
   viChance_To_Increase = 40

   viSchool = SS_JALA
   viSpell_level = 4

   viHarmful = FALSE

properties:

   prMusic = jig_song
   pbUserEffects = TRUE

   piMinHitPoints = 30
      
messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&Diamond,1],plReagents);

      return;
   }

   CanPayCosts(who = $, lTargets = $)
   {
      % Stop unguilded casting of Jig in towns.
      if NOT (IsClass(who,&DM) AND Send(who,@PlayerIsImmortal))
         AND Send(Send(who,@GetOwner),@CheckRoomFlag,#flag=ROOM_GUILD_PK_ONLY)
         AND (Send(who,@GetGuild) = $
              OR NOT Send(who,@CheckPlayerFlag,#flag=PFLAG_MURDERER))
      {
         Send(who,@MsgSendUser,#message_rsc=spell_bad_location,
              #parm1=Send(self,@GetName));

         return FALSE;
      }

      propagate;
   }

   CastSpell(who = $,spellpower = 0)
   "Called at beginning of spellcast"
   {
      local oRoom, each_obj, i;

      oRoom = Send(who,@GetOwner);
      Send(oRoom,@SetRoomFlag,#Flag=ROOM_JIG,#value=TRUE);
      Send(oRoom,@SetRoomFlag,#Flag=ROOM_NO_MOB_COMBAT,#value=TRUE);

      propagate;
   }

   EndSpell(where = $, state = $)
   {
      local i;
      
      Post(where,@SetRoomFlag,#Flag=ROOM_JIG,#value=FALSE);

      if Send(where,@CheckRoomFlag,#flag=ROOM_NO_MOB_COMBAT)
      {
         Send(where,@SetRoomFlagtoDefault,#flag=ROOM_NO_MOB_COMBAT);
      }
      
      for i in Send(where,@GetEnchantmentList)
      {
         if Send(Nth(i,2),@GetSpellNum) = SID_TRUCE
         {
            Send(where,@SetRoomFlag,#flag=ROOM_NO_MOB_COMBAT,#value=TRUE);
         }
      }
      
      propagate;
   }

   StartEnchantment( who = $ )
   "Starts enchantment effect on one player"
   {
      local lState;
      
      lState = Send(Send(who,@GetOwner),@GetEnchantmentState,#what=self);
      if lState = $ { DEBUG("Jig got $ state."); propagate; }
      if Nth(lState,2) = who
      {
         Send(who,@ResetPlayerFlagList);

         propagate;
      }
      
      Send(who,@FreeHands);
      Send(who,@DoDance);
      
      propagate;
   }

   StartEnchantmentNewOccupant( who = $ )
   "Called on new occupants of the enchanted room."
   {
      Send(self,@StartEnchantment,#who=who);

      return;
   }

   EndRoomEnchantment(who = $, state = $)
   "Called when user leaves the room."
   {
      Send(self,@RemoveEnchantment,#who=who);

      propagate;
   }

   RemoveEnchantment(who=$)
   "Called instead of EndEnchantment when trance is broken"
   {
      if IsClass(who,&Player)
      {
         Post(who,@StopDancing);
      }

      propagate;
   }

   CheckDisruptWithNecklace()
   "Checks the chance to disrupt the spell with a Necklace of Jala on. "
   "Due to annoyance factor, this can always be disrupted."
   {
      return FALSE;
   }

   SpellBannedInArena()
   {
      return TRUE;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
