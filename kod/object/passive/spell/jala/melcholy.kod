% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Melancholy is Jala

constants:

   include blakston.khd

resources:

   Melancholy_name_rsc = "melancholy"
   Melancholy_icon_rsc = imlnchly.bgf
   Melancholy_desc_rsc = \
      "This is a sad song, invoking feelings of loss and sorrow.  It causes "
      "most people hearing it to experience overwhemling sadness, often "
      "leading to foul moods.  This music is appropriate for funerals and "
      "fighting against the forces of good.  "
      "It requires 1 sapphire to cast."

   melancholy_enter_rsc = "The nearby dirge brings a wistful sense of longing and sorrow."
   melancholy_leave_rsc = "The melancholy mood passes."

   Melancholy_song = ksong.mid
 
classvars:

   vrName = Melancholy_name_rsc
   vrIcon = Melancholy_icon_rsc
   vrDesc = Melancholy_desc_rsc

   jala_song_enter = melancholy_enter_rsc
   jala_song_leave = melancholy_leave_rsc
   
   viSpell_num = SID_MELANCHOLY
   viSchool = SS_JALA
   viSpell_level = 1

   viMana = 2
   viManaDrain = 2
   viDrainTime = 5000

   viSpellExertion = 2      
   viChance_To_Increase = 25

   viHarmful = FALSE
   viBaseRange = 5

properties:

   prMusic = Melancholy_song
      
messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&Sapphire,1],plReagents);

      return;
   }

   % Begin the song's effects
   EnterSong(who=$,iVolume=0,singer=$)
   {
      if random(1,100) < iVolume
      {
         Send(who,@SetAction,#action=UA_SAD);       
      }
      else
      {
         % No smiling during the sad song.
         if Send(who,@GetAction) = UA_HAPPY
         {
            Send(who,@SetAction,#action=UA_NORMAL);
         }
      }
      
      propagate;
   }

   ModifyHitRoll(who = $,what = $,state = $,hit_roll = $,stroke_obj = $,originalValue = 0)
   {
      % Only add hit against good targets.
      if Send(what,@GetKarma,#detect=TRUE) > 0
      {
         return bound(hit_roll + Nth(state,2),originalValue,originalValue+100);
      }
      return hit_roll;
   }
   
   ModifyDamage(who = $,what = $,state = $,damage = $,stroke_obj = $,originalValue = 0)
   {
      % Only add damage against good targets.
      if Send(what,@GetKarma,#detect=TRUE) > 0
      {
         % Roughly equal to Killing Fields
         return bound((damage + Random(1,((Nth(state,2)+1)/20))),originalValue,originalValue+5);
      }

      return damage;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
