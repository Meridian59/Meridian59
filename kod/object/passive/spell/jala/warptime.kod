% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
WarpTime is Jala

constants:

   include blakston.khd

resources:

   WarpTime_name_rsc = "warp time"
   WarpTime_icon_rsc = iwarptim.bgf
   WarpTime_desc_rsc = \
      "The words of this song form an enchantment which slows time."

   Warptime_song = jala4.mid

   warptime_enter_rsc = "A woozy feeling passes through your head as time slows to a crawl."
   warptime_leave_rsc = "A rushing sensation passes through your head as time speeds back up."
   
   warptime_slowed_rsc = "Your actions seem to happen in slow motion."
 
classvars:

   vrName = WarpTime_name_rsc
   vrIcon = WarpTime_icon_rsc
   vrDesc = WarpTime_desc_rsc

   jala_song_enter = warptime_enter_rsc
   jala_song_leave = warptime_leave_rsc

   viMana = 5          % Mana is amount used upon inititiation
   viManaDrain = 10     % Drain is amount used every viDrainTime milliseconds
   viDrainTime = 10000    % Drain some mana every viDrainTime milliseconds
   viSpell_num = SID_WARP_TIME

   viSchool = SS_JALA
   viSpell_level = 2

   viHarmful = TRUE
   viBaseRange = 2
   viAffectsGuildmates = TRUE

properties:

   prMusic= warptime_song

messages:

   ResetReagents()
   {
      plReagents = $;

      return;
   }
   
   ModifyAttackTime(who=$,state=$,time=1,originalValue=1)
   {
      if time > (originalValue * 3)
      {
         return time;
      }

      if time = originalValue
      {
         Send(who,@MsgSendUser,#message=warptime_slowed_rsc);
      }

      time = ((time * Nth(state,2))/33);
      time = bound(time, originalValue, originalValue*3);

      return time;
   }

   ModifyPostCastTime(who=$,state=$,time=1,originalValue=1)
   {
      if time > (originalValue * 3)
      {
         return time;
      }

      if time = originalValue
      {
         Send(who,@MsgSendUser,#message=warptime_slowed_rsc);
      }

      time = ((time * Nth(state,2))/33);
      time = bound(time, originalValue, originalValue*3);

      return time;
   }

   ModifyTranceTime(who=$,state=$,percent=100,iSpellPower=0,originalValue=100)
   {
      if percent > (originalValue * 3)
      {
         return percent;
      }

      percent = ((percent * Nth(state,2))/33);
      percent = bound(percent, originalValue, originalValue*3);

      return percent;
   }

   % Offer up to 2 damage reduction based on spellpower due to slowed attacks
   ModifyDefenseDamage(who = $,what = $,state = $,damage = $,atype = $,aspell = $,stroke_obj = $,originalValue = 0)
   {
      return bound((damage-((Nth(state,2)+1)/50)),originalValue-2,originalValue);
   }
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
