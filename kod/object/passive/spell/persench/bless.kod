% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%S%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Bless is PersonalEnchantment

constants:

   include blakston.khd

resources:

   bless_name_rsc = "bless"
   bless_icon_rsc = blessico.bgf
   bless_desc_rsc = \
      "Invokes Kraanan's blessing, increasing the accuracy "
      "and damage of attacks.  "
      "Requires mushrooms to cast."
   
   bless_already_enchanted_rsc = "You are already blessed."
   bless_on_rsc = "Kraanan fills you with the spirit of battle."
   bless_off_rsc = "The spirit of battle has left you."
   bless_success_rsc = "Kraanan fills %s%s with the spirit of battle."

   bless_spell_intro = \
      "Kraanan Lv. 2: Bestows the Warrior God's blessing, improving your"
      "combat abilities."

classvars:

   viPersonal_ench = True

   vrName = bless_name_rsc
   vrIcon = bless_icon_rsc
   vrDesc = bless_desc_rsc

   vrAlreadyEnchanted = bless_already_enchanted_rsc
   vrEnchantment_On = bless_On_rsc
   vrEnchantment_Off = bless_Off_rsc
   vrSuccess = bless_Success_rsc

   viSpell_num = SID_BLESS

   vrSpell_intro = bless_spell_intro

   viMana = 6

   viSpell_level = 2
   viSchool = SS_KRAANAN

   viChance_To_Increase = 25

   viFlash = FLASH_GOOD_SELF

properties:
   
messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&Mushroom,1],plReagents);

      return;
   }

   CastSpell(who = $,iSpellPower= 0,ltargets=$)
   {
      Send(First(lTargets),@AddAttackModifier,#what=self);       

      propagate;
   }

   GetStateValue(iSpellpower=$)
   {
      return iSpellpower;
   }

   GetDuration(iSpellPower=0)
   {
      local iDuration;

      % Base duration is 40-640 seconds.
      iDuration = (40 + (iSpellPower*6)) * 1000;

      return Random(iDuration/2,iDuration);
   }

   EndEnchantment(who=$, report=TRUE, state=0)
   {
      Send(who,@RemoveAttackModifier,#what=self);
      
      propagate;
   }

   % stuff we handle to be an attack modifier

   ModifyHitRoll(who = $,what = $,hit_roll = $)
   {
      return hit_roll + Send(who,@GetEnchantedState,#what=self);
   }
   
   ModifyDamage(who = $,what = $,damage = $)
   {
      return damage + Random(0,send(who,@GetEnchantedState,#what=self)/33);
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
