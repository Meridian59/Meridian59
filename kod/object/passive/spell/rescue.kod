% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Rescue is Spell

constants:

   include blakston.khd

resources:

   rescue_name_rsc = "rescue"
   rescue_icon_rsc = rescuico.bgf
   rescue_desc_rsc = \
      "Calls upon Shal'ille to transport you back to "
      "safety.  Ability determines how fast you are rescued.  "
      "Requires emerald to cast."

   Rescue_Start = "You start your rescue preparations."
   Rescue_Success = "You feel a holy force rescue you from your current situation."
   Rescue_Already_Cast = "You are already being rescued."
   Rescue_Token_Cancel = "You cannot rescue while holding a token."
   
   rescue_sound = srescue.wav

classvars:

   vrName = rescue_name_rsc
   vrIcon = rescue_icon_rsc
   vrDesc = rescue_desc_rsc

   viSpell_num = SID_RESCUE
   viSchool = SS_SHALILLE
   viSpell_level = 3
   viMana = 16

   vrSucceed_wav = rescue_sound
   viChance_To_Increase = 10

   viFlash = FLASH_GOOD

properties:

messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&Emerald,1],plReagents);

      return;
   }

   GetNumSpellTargets()
   {
      return 0;
   }

   CanPayCosts(who = $, lTargets = $)
   {
      % Can't cast just after attacking someone
      if Send(who, @GetLastPlayerAttackTime) + 
         Send(Send(SYS, @GetSettings), @TeleportAttackDelaySec) >
         GetTime()
      {
         Send(who, @MsgSendUser, #message_rsc = spell_too_soon_since_attacking);
         return FALSE;
      }
      
      if Send(who,@FindHolding,#class=&Token)
      {
        send(who,@MsgSendUser,#message_rsc=Rescue_Token_Cancel);
        
        return FALSE;
      }

      if NOT send(who,@CanRescue)
      {
         send(who,@MsgSendUser,#message_rsc=Rescue_Already_Cast);

         return FALSE;
      }

      propagate;
   }

   CastSpell(who = $, iSpellPower = 0)
   {
      local iDelay;

      % Start with the base time.  Reduce time by spellpower.
      iDelay = 1000 * Send(Send(SYS, @GetSettings), @RescueBaseDelaySec);
      iDelay = iDelay - (iSpellPower * iDelay) / 100 / 4;

      % Add a little delay in sometimes.
      if random(1,2) = 1
      {
         iDelay = iDelay + random(5000, 10000);
      }

      send(who,@StartRescueTimer,#time=iDelay);
      send(who,@MsgSendUser,#message_rsc=Rescue_Start);

      propagate;
   }

   DoRescue(who = $)
   {
      local i, oCurrentRoom, oTargetRoom, oGuild;

      send(who,@MsgSendUser,#message_rsc=Rescue_Success);

      oCurrentRoom = send(who,@GetOwner);

      if oCurrentRoom <> $
      {
         % Are they guilded with a guild hall?
         oGuild = send(who,@GetGuild);
         if oGuild <> $
         {
            oTargetRoom = send(oGuild,@GetGuildHall);

            % If we have a guild hall, and not already in the guild hall,
            %  and we're in the same region as the hall, go there.
            if oTargetRoom <> $
               AND oTargetRoom <> oCurrentRoom
               AND send(oTargetRoom,@GetRegion) = send(oCurrentRoom,@GetRegion)
            {
               post(oTargetRoom,@Teleport,#what=who);

               return;
            }
         }

         % Teleport to Ko'catan Inn if we're in Kocatan, or at the Pool of Vigor.
         if send(oCurrentRoom,@GetRegion) = RID_KOCATAN
            OR send(oCurrentRoom,@GetRoomNum) = RID_ORC_CAVE5_EXT
         {
            oTargetRoom = send(SYS,@FindRoomByNum,#num=RID_KOC_INN);
            post(oTargetRoom,@Teleport,#what=who);
         
            return;
         }

         % If we're in the orc caves, teleport to the Pool of Vigor.
         % Except: actually being in the Pool of Vigor is handled above.
         if send(oCurrentRoom,@GetRegion) = RID_ORC_CAVE1
         {
            oTargetRoom = send(SYS,@FindRoomByNum,#num=RID_ORC_CAVE5_EXT);
            post(oTargetRoom,@Teleport,#what=who);
         
            return;
         }
      }

      % Default: Go to our home room.
      post(who,@AdminGoToSafety);

      return;
   }

   SpellBannedInArena()
   {
      return TRUE;
   }

   GetPotionClass()
   {
      return &RescuePotion;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
