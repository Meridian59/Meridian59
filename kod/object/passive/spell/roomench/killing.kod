% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%S%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
KillingFields is RoomEnchantment

constants:

   include blakston.khd

   %  2 realtime minutes
   KILLINGFIELDS_TIME = 120000

resources:

   killingfields_name_rsc = "killing fields"
   killingfields_icon_rsc = ikillfel.bgf
   killingfields_desc_rsc = \
      "Induces magical blood-lust, increasing the damage of all attacks in the area.  "
	   "Requires elderberries and orc teeth to cast."
   
   killingfields_already_enchanted = "This place is already a killing field."

   killingfields_on = "Kraanan smiles and battle fury fills your heart.  The very earth thirsts for freshly shed blood."
   killingfields_off = "The spirit of Kraanan departs from this place."
   killingfields_on_new_entrant = "Battle fury fills your heart.  The very earth thirsts for freshly shed blood."

classvars:

   vrName = killingfields_name_rsc
   vrIcon = killingfields_icon_rsc
   vrDesc = killingfields_desc_rsc

   viSpell_num = SID_KILLING_FIELDS
   viMana = 9
   viSchool = SS_KRAANAN
   viSpell_level = 5

   viChance_To_Increase = 35

properties:
  
messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&Elderberry,3],plReagents);
      plReagents = Cons([&OrcTooth,1],plReagents);

      return;
   }

   GetNumSpellTargets()
   {
      return 0;
   }

   CanPayCosts(who = $, lTargets = $)
   {
      local oRoom;

      oRoom = Send(who,@GetOwner);

      % check for enchantment already applied
      if Send(oRoom,@IsEnchanted,#what=self)
      {
         Send(who,@MsgSendUser,#message_rsc=killingfields_already_enchanted);
         
         return FALSE;
      }

      propagate;
   }

   CastSpell(who = $,iSpellPower = 0)
   {
      local oRoom;

      oRoom = Send(who,@GetOwner);

      % Global effects of the enchantment.
      Send(oRoom,@SomeoneSaid,#type=SAY_MESSAGE,#string=killingfields_on,#what=self);

      Send(oRoom,@RoomStartEnchantment,#what=self,#state=$,
           #time=send(self,@GetDuration,#iSpellPower=iSpellPower));
      Send(oRoom,@EnchantAllOccupants,#what=self);

      propagate;
   }

   StartEnchantmentNewOccupant(who = $)
   "Called on new occupants of the enchanted room."
   {
      Send(who,@MsgSendUser,#message_rsc=killingfields_on_new_entrant);
      Send(self,@StartEnchantment,#who=who);

      return;
   }

   StartEnchantment(who = $)
   "Starts enchantment effect on one player"
   {
      Send(who,@AddAttackModifier,#what=self);

      return;
   }

   EndSpell(where = $,state = $)
   "Called when spell expires."
   {
      Send(where,@SomeoneSaid,#type=SAY_MESSAGE,#string=killingfields_off,#what=self);
      Send(where,@UnenchantAllOccupants,#what=self,#state=state);

      return;
   }

   EndRoomEnchantment(who = $,state = $)
   "Remove enchantment effects on this occupant"
   {
      Send(who,@RemoveAttackModifier,#what=self);

      return;
   }

   GetDuration(iSpellPower=0)
   {
      local duration;

      % Time in seconds.
      duration = 50 + iSpellPower;
      % Convert to ms.
      duration = duration * 1000;

      return duration;
   }

   % Stuff we handle to be an attack modifier.

   ModifyHitRoll(who = $,what = $,hit_roll = $)
   {
      return hit_roll;
   }
   
   ModifyDamage(who = $,what = $,damage = $)
   {
      return damage + Random(2,5);
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
