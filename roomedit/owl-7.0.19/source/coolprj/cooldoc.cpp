//----------------------------------------------------------------------------
//  Project sdidv
//  OWL NExt
//  Copyright 1999. All Rights reserved.
//
//  SUBSYSTEM:    sdidv Application
//  FILE:         cooldocument.h
//  AUTHOR:       Yura Bidus
//
//  OVERVIEW
//  ~~~~~~~~
//  Source file for implementation of TCoolDocument (TDocument).
//  (Generated by OWL 6.x Class Expert for MS VC++, Version 1.5)
//----------------------------------------------------------------------------
#include <coolprj/pch.h>
#pragma hdrstop

#include <owl/configfl.h>
#include <owl/file.h>
#include <coolprj/cooldoc.h>

using namespace owl;
using namespace std;

//{{TCoolDocument Implementation}}

//--------------------------------------------------------
// TCoolDocument Constructor
//
TCoolDocument::TCoolDocument(TDocument* parent)
:
  Inherited(parent),
  TextBuffer(TCoolTextBuffer::clStyleAutomatic)
{
  //TIniConfigFile file(".\\cooledit.ini");
  //GetTextBuffer().RestoreSyntaxDescr(file);
}
//--------------------------------------------------------
// TCoolDocument Destructor
//
TCoolDocument::~TCoolDocument()
{
  //TIniConfigFile file(".\\cooledit.ini");
  //GetTextBuffer().SaveSyntaxDescr(file);
}
//
bool TCoolDocument::InitDoc()
{
  // Call base class function.
  if(!Inherited::InitDoc())
    return false;
  // if new document insert first character
  if(GetDocPath()==0)
    GetTextBuffer().InsertLine(_T(""));
  return true;
}
//
bool TCoolDocument::Open(int mode, LPCTSTR path)
{
  TWaitCursor w;
  // Call base class function.
  if(!Inherited::Open(mode,path))
    return false;

  TFile file(GetDocPath());
  if(!file.IsOpen())
    return false;

  if(!GetTextBuffer().Load(file)){
    PostError(IDS_GDIFILEREADFAIL);
    return false;
  }

  NotifyViews(vnDocOpened, mode);
  return true;
}
//
bool TCoolDocument::Commit(bool force)
{
  // Call base class function.
  TWaitCursor w;
  // Call base class function.
  if(!Inherited::Commit(force))
    return false;

  if(force || IsDirty()){
    TFile file(GetDocPath(), TFile::WriteOnly|TFile::CreateAlways);
    if(!file.IsOpen())
      return false;
    return GetTextBuffer().Save(file);
  }
  return true;
}
//
bool TCoolDocument::Revert(bool clear)
{
  TWaitCursor w;
  if(!Inherited::Revert(clear))
    return false;

  if(GetDocPath()){
    TFile file(GetDocPath());
    if(!file.IsOpen())
      return false;

    if(!GetTextBuffer().Load(file)){
      PostError(IDS_GDIFILEREADFAIL);
      return false;
    }
  }
  SetDirty(false);
  GetTextBuffer().SetDirty(false);
  return true;
}
//
